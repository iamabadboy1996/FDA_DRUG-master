'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="LGTCPN")>  _
Partial Public Class Linq_CPNDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertsyslcnsid(instance As syslcnsid)
    End Sub
  Partial Private Sub Updatesyslcnsid(instance As syslcnsid)
    End Sub
  Partial Private Sub Deletesyslcnsid(instance As syslcnsid)
    End Sub
  Partial Private Sub Insertsyslcnsnm(instance As syslcnsnm)
    End Sub
  Partial Private Sub Updatesyslcnsnm(instance As syslcnsnm)
    End Sub
  Partial Private Sub Deletesyslcnsnm(instance As syslcnsnm)
    End Sub
  Partial Private Sub Insertsyslctaddr(instance As syslctaddr)
    End Sub
  Partial Private Sub Updatesyslctaddr(instance As syslctaddr)
    End Sub
  Partial Private Sub Deletesyslctaddr(instance As syslctaddr)
    End Sub
  Partial Private Sub Insertsyslctnm(instance As syslctnm)
    End Sub
  Partial Private Sub Updatesyslctnm(instance As syslctnm)
    End Sub
  Partial Private Sub Deletesyslctnm(instance As syslctnm)
    End Sub
  Partial Private Sub Insertsysusrid(instance As sysusrid)
    End Sub
  Partial Private Sub Updatesysusrid(instance As sysusrid)
    End Sub
  Partial Private Sub Deletesysusrid(instance As sysusrid)
    End Sub
  Partial Private Sub Insertfda_sysaddrhn(instance As fda_sysaddrhn)
    End Sub
  Partial Private Sub Updatefda_sysaddrhn(instance As fda_sysaddrhn)
    End Sub
  Partial Private Sub Deletefda_sysaddrhn(instance As fda_sysaddrhn)
    End Sub
  Partial Private Sub Insertsyschngwt(instance As syschngwt)
    End Sub
  Partial Private Sub Updatesyschngwt(instance As syschngwt)
    End Sub
  Partial Private Sub Deletesyschngwt(instance As syschngwt)
    End Sub
  Partial Private Sub Insertsysamphr(instance As sysamphr)
    End Sub
  Partial Private Sub Updatesysamphr(instance As sysamphr)
    End Sub
  Partial Private Sub Deletesysamphr(instance As sysamphr)
    End Sub
  Partial Private Sub Insertsysthmbl(instance As systhmbl)
    End Sub
  Partial Private Sub Updatesysthmbl(instance As systhmbl)
    End Sub
  Partial Private Sub Deletesysthmbl(instance As systhmbl)
    End Sub
  Partial Private Sub InsertTRANSESSION_UPLOAD(instance As TRANSESSION_UPLOAD)
    End Sub
  Partial Private Sub UpdateTRANSESSION_UPLOAD(instance As TRANSESSION_UPLOAD)
    End Sub
  Partial Private Sub DeleteTRANSESSION_UPLOAD(instance As TRANSESSION_UPLOAD)
    End Sub
  Partial Private Sub InsertTRANSESSION_DOWNLOAD(instance As TRANSESSION_DOWNLOAD)
    End Sub
  Partial Private Sub UpdateTRANSESSION_DOWNLOAD(instance As TRANSESSION_DOWNLOAD)
    End Sub
  Partial Private Sub DeleteTRANSESSION_DOWNLOAD(instance As TRANSESSION_DOWNLOAD)
    End Sub
  Partial Private Sub InsertSYSTEM_NAME(instance As SYSTEM_NAME)
    End Sub
  Partial Private Sub UpdateSYSTEM_NAME(instance As SYSTEM_NAME)
    End Sub
  Partial Private Sub DeleteSYSTEM_NAME(instance As SYSTEM_NAME)
    End Sub
  Partial Private Sub InsertPROCESS_NAME(instance As PROCESS_NAME)
    End Sub
  Partial Private Sub UpdatePROCESS_NAME(instance As PROCESS_NAME)
    End Sub
  Partial Private Sub DeletePROCESS_NAME(instance As PROCESS_NAME)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LGTCPNConnectionString1").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property syslcnsids() As System.Data.Linq.Table(Of syslcnsid)
		Get
			Return Me.GetTable(Of syslcnsid)
		End Get
	End Property
	
	Public ReadOnly Property syslcnsnms() As System.Data.Linq.Table(Of syslcnsnm)
		Get
			Return Me.GetTable(Of syslcnsnm)
		End Get
	End Property
	
	Public ReadOnly Property syslctaddrs() As System.Data.Linq.Table(Of syslctaddr)
		Get
			Return Me.GetTable(Of syslctaddr)
		End Get
	End Property
	
	Public ReadOnly Property syslctnms() As System.Data.Linq.Table(Of syslctnm)
		Get
			Return Me.GetTable(Of syslctnm)
		End Get
	End Property
	
	Public ReadOnly Property sysusrids() As System.Data.Linq.Table(Of sysusrid)
		Get
			Return Me.GetTable(Of sysusrid)
		End Get
	End Property
	
	Public ReadOnly Property fda_sysaddrhns() As System.Data.Linq.Table(Of fda_sysaddrhn)
		Get
			Return Me.GetTable(Of fda_sysaddrhn)
		End Get
	End Property
	
	Public ReadOnly Property syschngwts() As System.Data.Linq.Table(Of syschngwt)
		Get
			Return Me.GetTable(Of syschngwt)
		End Get
	End Property
	
	Public ReadOnly Property sysamphrs() As System.Data.Linq.Table(Of sysamphr)
		Get
			Return Me.GetTable(Of sysamphr)
		End Get
	End Property
	
	Public ReadOnly Property systhmbls() As System.Data.Linq.Table(Of systhmbl)
		Get
			Return Me.GetTable(Of systhmbl)
		End Get
	End Property
	
	Public ReadOnly Property TRANSESSION_UPLOADs() As System.Data.Linq.Table(Of TRANSESSION_UPLOAD)
		Get
			Return Me.GetTable(Of TRANSESSION_UPLOAD)
		End Get
	End Property
	
	Public ReadOnly Property TRANSESSION_DOWNLOADs() As System.Data.Linq.Table(Of TRANSESSION_DOWNLOAD)
		Get
			Return Me.GetTable(Of TRANSESSION_DOWNLOAD)
		End Get
	End Property
	
	Public ReadOnly Property SYSTEM_NAMEs() As System.Data.Linq.Table(Of SYSTEM_NAME)
		Get
			Return Me.GetTable(Of SYSTEM_NAME)
		End Get
	End Property
	
	Public ReadOnly Property PROCESS_NAMEs() As System.Data.Linq.Table(Of PROCESS_NAME)
		Get
			Return Me.GetTable(Of PROCESS_NAME)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.syslcnsid")>  _
Partial Public Class syslcnsid
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _lcnsid As Integer
	
	Private _crtlct As Short
	
	Private _birthdate As System.Nullable(Of Date)
	
	Private _chngwtcd As System.Nullable(Of Short)
	
	Private _ntcd As System.Nullable(Of Short)
	
	Private _taxno As String
	
	Private _trdregno As String
	
	Private _ctzno As String
	
	Private _remark As String
	
	Private _idst As System.Nullable(Of Short)
	
	Private _phrno As String
	
	Private _stfcd As System.Nullable(Of Integer)
	
	Private _nmprnst As System.Nullable(Of Short)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _lstfcd As Integer
	
	Private _lcnsidst As System.Nullable(Of Short)
	
	Private _scridst As System.Nullable(Of Short)
	
	Private _lmdfdate As Date
	
	Private _url As String
	
	Private _cncremark As String
	
	Private _email As String
	
	Private _otaxno As String
	
	Private _type As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OncrtlctChanging(value As Short)
    End Sub
    Partial Private Sub OncrtlctChanged()
    End Sub
    Partial Private Sub OnbirthdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnbirthdateChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnntcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnntcdChanged()
    End Sub
    Partial Private Sub OntaxnoChanging(value As String)
    End Sub
    Partial Private Sub OntaxnoChanged()
    End Sub
    Partial Private Sub OntrdregnoChanging(value As String)
    End Sub
    Partial Private Sub OntrdregnoChanged()
    End Sub
    Partial Private Sub OnctznoChanging(value As String)
    End Sub
    Partial Private Sub OnctznoChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnidstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnidstChanged()
    End Sub
    Partial Private Sub OnphrnoChanging(value As String)
    End Sub
    Partial Private Sub OnphrnoChanged()
    End Sub
    Partial Private Sub OnstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstfcdChanged()
    End Sub
    Partial Private Sub OnnmprnstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnnmprnstChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlcnsidstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlcnsidstChanged()
    End Sub
    Partial Private Sub OnscridstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnscridstChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As Date)
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnurlChanging(value As String)
    End Sub
    Partial Private Sub OnurlChanged()
    End Sub
    Partial Private Sub OncncremarkChanging(value As String)
    End Sub
    Partial Private Sub OncncremarkChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub OnotaxnoChanging(value As String)
    End Sub
    Partial Private Sub OnotaxnoChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property lcnsid() As Integer
		Get
			Return Me._lcnsid
		End Get
		Set
			If ((Me._lcnsid = value)  _
						= false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crtlct", DbType:="SmallInt NOT NULL")>  _
	Public Property crtlct() As Short
		Get
			Return Me._crtlct
		End Get
		Set
			If ((Me._crtlct = value)  _
						= false) Then
				Me.OncrtlctChanging(value)
				Me.SendPropertyChanging
				Me._crtlct = value
				Me.SendPropertyChanged("crtlct")
				Me.OncrtlctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_birthdate", DbType:="Date")>  _
	Public Property birthdate() As System.Nullable(Of Date)
		Get
			Return Me._birthdate
		End Get
		Set
			If (Me._birthdate.Equals(value) = false) Then
				Me.OnbirthdateChanging(value)
				Me.SendPropertyChanging
				Me._birthdate = value
				Me.SendPropertyChanged("birthdate")
				Me.OnbirthdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt")>  _
	Public Property chngwtcd() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ntcd", DbType:="SmallInt")>  _
	Public Property ntcd() As System.Nullable(Of Short)
		Get
			Return Me._ntcd
		End Get
		Set
			If (Me._ntcd.Equals(value) = false) Then
				Me.OnntcdChanging(value)
				Me.SendPropertyChanging
				Me._ntcd = value
				Me.SendPropertyChanged("ntcd")
				Me.OnntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxno", DbType:="VarChar(20)")>  _
	Public Property taxno() As String
		Get
			Return Me._taxno
		End Get
		Set
			If (String.Equals(Me._taxno, value) = false) Then
				Me.OntaxnoChanging(value)
				Me.SendPropertyChanging
				Me._taxno = value
				Me.SendPropertyChanged("taxno")
				Me.OntaxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdregno", DbType:="VarChar(100)")>  _
	Public Property trdregno() As String
		Get
			Return Me._trdregno
		End Get
		Set
			If (String.Equals(Me._trdregno, value) = false) Then
				Me.OntrdregnoChanging(value)
				Me.SendPropertyChanging
				Me._trdregno = value
				Me.SendPropertyChanged("trdregno")
				Me.OntrdregnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctzno", DbType:="VarChar(100)")>  _
	Public Property ctzno() As String
		Get
			Return Me._ctzno
		End Get
		Set
			If (String.Equals(Me._ctzno, value) = false) Then
				Me.OnctznoChanging(value)
				Me.SendPropertyChanging
				Me._ctzno = value
				Me.SendPropertyChanged("ctzno")
				Me.OnctznoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(40)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idst", DbType:="SmallInt")>  _
	Public Property idst() As System.Nullable(Of Short)
		Get
			Return Me._idst
		End Get
		Set
			If (Me._idst.Equals(value) = false) Then
				Me.OnidstChanging(value)
				Me.SendPropertyChanging
				Me._idst = value
				Me.SendPropertyChanged("idst")
				Me.OnidstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrno", DbType:="VarChar(20)")>  _
	Public Property phrno() As String
		Get
			Return Me._phrno
		End Get
		Set
			If (String.Equals(Me._phrno, value) = false) Then
				Me.OnphrnoChanging(value)
				Me.SendPropertyChanging
				Me._phrno = value
				Me.SendPropertyChanged("phrno")
				Me.OnphrnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stfcd", DbType:="Int")>  _
	Public Property stfcd() As System.Nullable(Of Integer)
		Get
			Return Me._stfcd
		End Get
		Set
			If (Me._stfcd.Equals(value) = false) Then
				Me.OnstfcdChanging(value)
				Me.SendPropertyChanging
				Me._stfcd = value
				Me.SendPropertyChanged("stfcd")
				Me.OnstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nmprnst", DbType:="SmallInt")>  _
	Public Property nmprnst() As System.Nullable(Of Short)
		Get
			Return Me._nmprnst
		End Get
		Set
			If (Me._nmprnst.Equals(value) = false) Then
				Me.OnnmprnstChanging(value)
				Me.SendPropertyChanging
				Me._nmprnst = value
				Me.SendPropertyChanged("nmprnst")
				Me.OnnmprnstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int NOT NULL")>  _
	Public Property lstfcd() As Integer
		Get
			Return Me._lstfcd
		End Get
		Set
			If ((Me._lstfcd = value)  _
						= false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsidst", DbType:="SmallInt")>  _
	Public Property lcnsidst() As System.Nullable(Of Short)
		Get
			Return Me._lcnsidst
		End Get
		Set
			If (Me._lcnsidst.Equals(value) = false) Then
				Me.OnlcnsidstChanging(value)
				Me.SendPropertyChanging
				Me._lcnsidst = value
				Me.SendPropertyChanged("lcnsidst")
				Me.OnlcnsidstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_scridst", DbType:="SmallInt")>  _
	Public Property scridst() As System.Nullable(Of Short)
		Get
			Return Me._scridst
		End Get
		Set
			If (Me._scridst.Equals(value) = false) Then
				Me.OnscridstChanging(value)
				Me.SendPropertyChanging
				Me._scridst = value
				Me.SendPropertyChanged("scridst")
				Me.OnscridstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2 NOT NULL")>  _
	Public Property lmdfdate() As Date
		Get
			Return Me._lmdfdate
		End Get
		Set
			If ((Me._lmdfdate = value)  _
						= false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_url", DbType:="VarChar(250)")>  _
	Public Property url() As String
		Get
			Return Me._url
		End Get
		Set
			If (String.Equals(Me._url, value) = false) Then
				Me.OnurlChanging(value)
				Me.SendPropertyChanging
				Me._url = value
				Me.SendPropertyChanged("url")
				Me.OnurlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncremark", DbType:="VarChar(250)")>  _
	Public Property cncremark() As String
		Get
			Return Me._cncremark
		End Get
		Set
			If (String.Equals(Me._cncremark, value) = false) Then
				Me.OncncremarkChanging(value)
				Me.SendPropertyChanging
				Me._cncremark = value
				Me.SendPropertyChanged("cncremark")
				Me.OncncremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="VarChar(100)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_otaxno", DbType:="VarChar(20)")>  _
	Public Property otaxno() As String
		Get
			Return Me._otaxno
		End Get
		Set
			If (String.Equals(Me._otaxno, value) = false) Then
				Me.OnotaxnoChanging(value)
				Me.SendPropertyChanging
				Me._otaxno = value
				Me.SendPropertyChanged("otaxno")
				Me.OnotaxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="Int")>  _
	Public Property type() As System.Nullable(Of Integer)
		Get
			Return Me._type
		End Get
		Set
			If (Me._type.Equals(value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.syslcnsnm")>  _
Partial Public Class syslcnsnm
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _lcnsid As Integer
	
	Private _lcnscd As Integer
	
	Private _prefixcd As System.Nullable(Of Short)
	
	Private _thanm As String
	
	Private _engnm As String
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _thalnm As String
	
	Private _englnm As String
	
	Private _suffixcd As System.Nullable(Of Short)
	
	Private _lcnsst As System.Nullable(Of Short)
	
	Private _grplcnscd As System.Nullable(Of Short)
	
	Private _bsncd As Integer
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As Date
	
	Private _lcnsidst As System.Nullable(Of Short)
	
	Private _validdate As System.Nullable(Of Date)
	
	Private _oldid As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnprefixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnprefixcdChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub OnengnmChanging(value As String)
    End Sub
    Partial Private Sub OnengnmChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnthalnmChanging(value As String)
    End Sub
    Partial Private Sub OnthalnmChanged()
    End Sub
    Partial Private Sub OnenglnmChanging(value As String)
    End Sub
    Partial Private Sub OnenglnmChanged()
    End Sub
    Partial Private Sub OnsuffixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsuffixcdChanged()
    End Sub
    Partial Private Sub OnlcnsstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlcnsstChanged()
    End Sub
    Partial Private Sub OngrplcnscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OngrplcnscdChanged()
    End Sub
    Partial Private Sub OnbsncdChanging(value As Integer)
    End Sub
    Partial Private Sub OnbsncdChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As Date)
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnlcnsidstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlcnsidstChanged()
    End Sub
    Partial Private Sub OnvaliddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnvaliddateChanged()
    End Sub
    Partial Private Sub OnoldidChanging(value As String)
    End Sub
    Partial Private Sub OnoldidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property lcnsid() As Integer
		Get
			Return Me._lcnsid
		End Get
		Set
			If ((Me._lcnsid = value)  _
						= false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property lcnscd() As Integer
		Get
			Return Me._lcnscd
		End Get
		Set
			If ((Me._lcnscd = value)  _
						= false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="SmallInt")>  _
	Public Property prefixcd() As System.Nullable(Of Short)
		Get
			Return Me._prefixcd
		End Get
		Set
			If (Me._prefixcd.Equals(value) = false) Then
				Me.OnprefixcdChanging(value)
				Me.SendPropertyChanging
				Me._prefixcd = value
				Me.SendPropertyChanged("prefixcd")
				Me.OnprefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="VarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnm", DbType:="VarChar(100)")>  _
	Public Property engnm() As String
		Get
			Return Me._engnm
		End Get
		Set
			If (String.Equals(Me._engnm, value) = false) Then
				Me.OnengnmChanging(value)
				Me.SendPropertyChanging
				Me._engnm = value
				Me.SendPropertyChanged("engnm")
				Me.OnengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thalnm", DbType:="VarChar(100)")>  _
	Public Property thalnm() As String
		Get
			Return Me._thalnm
		End Get
		Set
			If (String.Equals(Me._thalnm, value) = false) Then
				Me.OnthalnmChanging(value)
				Me.SendPropertyChanging
				Me._thalnm = value
				Me.SendPropertyChanged("thalnm")
				Me.OnthalnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_englnm", DbType:="VarChar(100)")>  _
	Public Property englnm() As String
		Get
			Return Me._englnm
		End Get
		Set
			If (String.Equals(Me._englnm, value) = false) Then
				Me.OnenglnmChanging(value)
				Me.SendPropertyChanging
				Me._englnm = value
				Me.SendPropertyChanged("englnm")
				Me.OnenglnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suffixcd", DbType:="SmallInt")>  _
	Public Property suffixcd() As System.Nullable(Of Short)
		Get
			Return Me._suffixcd
		End Get
		Set
			If (Me._suffixcd.Equals(value) = false) Then
				Me.OnsuffixcdChanging(value)
				Me.SendPropertyChanging
				Me._suffixcd = value
				Me.SendPropertyChanged("suffixcd")
				Me.OnsuffixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsst", DbType:="SmallInt")>  _
	Public Property lcnsst() As System.Nullable(Of Short)
		Get
			Return Me._lcnsst
		End Get
		Set
			If (Me._lcnsst.Equals(value) = false) Then
				Me.OnlcnsstChanging(value)
				Me.SendPropertyChanging
				Me._lcnsst = value
				Me.SendPropertyChanged("lcnsst")
				Me.OnlcnsstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grplcnscd", DbType:="SmallInt")>  _
	Public Property grplcnscd() As System.Nullable(Of Short)
		Get
			Return Me._grplcnscd
		End Get
		Set
			If (Me._grplcnscd.Equals(value) = false) Then
				Me.OngrplcnscdChanging(value)
				Me.SendPropertyChanging
				Me._grplcnscd = value
				Me.SendPropertyChanged("grplcnscd")
				Me.OngrplcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsncd", DbType:="Int NOT NULL")>  _
	Public Property bsncd() As Integer
		Get
			Return Me._bsncd
		End Get
		Set
			If ((Me._bsncd = value)  _
						= false) Then
				Me.OnbsncdChanging(value)
				Me.SendPropertyChanging
				Me._bsncd = value
				Me.SendPropertyChanged("bsncd")
				Me.OnbsncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2 NOT NULL")>  _
	Public Property lmdfdate() As Date
		Get
			Return Me._lmdfdate
		End Get
		Set
			If ((Me._lmdfdate = value)  _
						= false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsidst", DbType:="SmallInt")>  _
	Public Property lcnsidst() As System.Nullable(Of Short)
		Get
			Return Me._lcnsidst
		End Get
		Set
			If (Me._lcnsidst.Equals(value) = false) Then
				Me.OnlcnsidstChanging(value)
				Me.SendPropertyChanging
				Me._lcnsidst = value
				Me.SendPropertyChanged("lcnsidst")
				Me.OnlcnsidstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_validdate", DbType:="Date")>  _
	Public Property validdate() As System.Nullable(Of Date)
		Get
			Return Me._validdate
		End Get
		Set
			If (Me._validdate.Equals(value) = false) Then
				Me.OnvaliddateChanging(value)
				Me.SendPropertyChanging
				Me._validdate = value
				Me.SendPropertyChanged("validdate")
				Me.OnvaliddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oldid", DbType:="VarChar(60)")>  _
	Public Property oldid() As String
		Get
			Return Me._oldid
		End Get
		Set
			If (String.Equals(Me._oldid, value) = false) Then
				Me.OnoldidChanging(value)
				Me.SendPropertyChanging
				Me._oldid = value
				Me.SendPropertyChanged("oldid")
				Me.OnoldidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.syslctaddr")>  _
Partial Public Class syslctaddr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _lcnsid As Integer
	
	Private _lctcd As Integer
	
	Private _thaaddr As String
	
	Private _engaddr As String
	
	Private _room As String
	
	Private _mu As String
	
	Private _floor As String
	
	Private _thasoi As String
	
	Private _building As String
	
	Private _engsoi As String
	
	Private _tharoad As String
	
	Private _engroad As String
	
	Private _thmblcd As System.Nullable(Of Short)
	
	Private _amphrcd As Short
	
	Private _chngwtcd As Short
	
	Private _zipcode As System.Nullable(Of Integer)
	
	Private _tel As String
	
	Private _fax As String
	
	Private _validdate As System.Nullable(Of Date)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As Date
	
	Private _pvcode As System.Nullable(Of Short)
	
	Private _amcode As System.Nullable(Of Short)
	
	Private _ttcode As System.Nullable(Of Short)
	
	Private _branch As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnengaddrChanging(value As String)
    End Sub
    Partial Private Sub OnengaddrChanged()
    End Sub
    Partial Private Sub OnroomChanging(value As String)
    End Sub
    Partial Private Sub OnroomChanged()
    End Sub
    Partial Private Sub OnmuChanging(value As String)
    End Sub
    Partial Private Sub OnmuChanged()
    End Sub
    Partial Private Sub OnfloorChanging(value As String)
    End Sub
    Partial Private Sub OnfloorChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OnbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnbuildingChanged()
    End Sub
    Partial Private Sub OnengsoiChanging(value As String)
    End Sub
    Partial Private Sub OnengsoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnengroadChanging(value As String)
    End Sub
    Partial Private Sub OnengroadChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As Short)
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As Short)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnvaliddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnvaliddateChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As Date)
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnpvcodeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvcodeChanged()
    End Sub
    Partial Private Sub OnamcodeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamcodeChanged()
    End Sub
    Partial Private Sub OnttcodeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnttcodeChanged()
    End Sub
    Partial Private Sub OnbranchChanging(value As String)
    End Sub
    Partial Private Sub OnbranchChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property lcnsid() As Integer
		Get
			Return Me._lcnsid
		End Get
		Set
			If ((Me._lcnsid = value)  _
						= false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property lctcd() As Integer
		Get
			Return Me._lctcd
		End Get
		Set
			If ((Me._lctcd = value)  _
						= false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="VarChar(150)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engaddr", DbType:="VarChar(150)")>  _
	Public Property engaddr() As String
		Get
			Return Me._engaddr
		End Get
		Set
			If (String.Equals(Me._engaddr, value) = false) Then
				Me.OnengaddrChanging(value)
				Me.SendPropertyChanging
				Me._engaddr = value
				Me.SendPropertyChanged("engaddr")
				Me.OnengaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_room", DbType:="VarChar(60)")>  _
	Public Property room() As String
		Get
			Return Me._room
		End Get
		Set
			If (String.Equals(Me._room, value) = false) Then
				Me.OnroomChanging(value)
				Me.SendPropertyChanging
				Me._room = value
				Me.SendPropertyChanged("room")
				Me.OnroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mu", DbType:="Char(3)")>  _
	Public Property mu() As String
		Get
			Return Me._mu
		End Get
		Set
			If (String.Equals(Me._mu, value) = false) Then
				Me.OnmuChanging(value)
				Me.SendPropertyChanging
				Me._mu = value
				Me.SendPropertyChanged("mu")
				Me.OnmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_floor", DbType:="VarChar(60)")>  _
	Public Property floor() As String
		Get
			Return Me._floor
		End Get
		Set
			If (String.Equals(Me._floor, value) = false) Then
				Me.OnfloorChanging(value)
				Me.SendPropertyChanging
				Me._floor = value
				Me.SendPropertyChanged("floor")
				Me.OnfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="VarChar(80)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_building", DbType:="VarChar(250)")>  _
	Public Property building() As String
		Get
			Return Me._building
		End Get
		Set
			If (String.Equals(Me._building, value) = false) Then
				Me.OnbuildingChanging(value)
				Me.SendPropertyChanging
				Me._building = value
				Me.SendPropertyChanged("building")
				Me.OnbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi", DbType:="VarChar(80)")>  _
	Public Property engsoi() As String
		Get
			Return Me._engsoi
		End Get
		Set
			If (String.Equals(Me._engsoi, value) = false) Then
				Me.OnengsoiChanging(value)
				Me.SendPropertyChanging
				Me._engsoi = value
				Me.SendPropertyChanged("engsoi")
				Me.OnengsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="VarChar(80)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad", DbType:="VarChar(80)")>  _
	Public Property engroad() As String
		Get
			Return Me._engroad
		End Get
		Set
			If (String.Equals(Me._engroad, value) = false) Then
				Me.OnengroadChanging(value)
				Me.SendPropertyChanging
				Me._engroad = value
				Me.SendPropertyChanged("engroad")
				Me.OnengroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="SmallInt")>  _
	Public Property thmblcd() As System.Nullable(Of Short)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="SmallInt NOT NULL")>  _
	Public Property amphrcd() As Short
		Get
			Return Me._amphrcd
		End Get
		Set
			If ((Me._amphrcd = value)  _
						= false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt NOT NULL")>  _
	Public Property chngwtcd() As Short
		Get
			Return Me._chngwtcd
		End Get
		Set
			If ((Me._chngwtcd = value)  _
						= false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="Int")>  _
	Public Property zipcode() As System.Nullable(Of Integer)
		Get
			Return Me._zipcode
		End Get
		Set
			If (Me._zipcode.Equals(value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="VarChar(60)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="VarChar(60)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_validdate", DbType:="Date")>  _
	Public Property validdate() As System.Nullable(Of Date)
		Get
			Return Me._validdate
		End Get
		Set
			If (Me._validdate.Equals(value) = false) Then
				Me.OnvaliddateChanging(value)
				Me.SendPropertyChanging
				Me._validdate = value
				Me.SendPropertyChanged("validdate")
				Me.OnvaliddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2 NOT NULL")>  _
	Public Property lmdfdate() As Date
		Get
			Return Me._lmdfdate
		End Get
		Set
			If ((Me._lmdfdate = value)  _
						= false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvcode", DbType:="SmallInt")>  _
	Public Property pvcode() As System.Nullable(Of Short)
		Get
			Return Me._pvcode
		End Get
		Set
			If (Me._pvcode.Equals(value) = false) Then
				Me.OnpvcodeChanging(value)
				Me.SendPropertyChanging
				Me._pvcode = value
				Me.SendPropertyChanged("pvcode")
				Me.OnpvcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amcode", DbType:="SmallInt")>  _
	Public Property amcode() As System.Nullable(Of Short)
		Get
			Return Me._amcode
		End Get
		Set
			If (Me._amcode.Equals(value) = false) Then
				Me.OnamcodeChanging(value)
				Me.SendPropertyChanging
				Me._amcode = value
				Me.SendPropertyChanged("amcode")
				Me.OnamcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ttcode", DbType:="SmallInt")>  _
	Public Property ttcode() As System.Nullable(Of Short)
		Get
			Return Me._ttcode
		End Get
		Set
			If (Me._ttcode.Equals(value) = false) Then
				Me.OnttcodeChanging(value)
				Me.SendPropertyChanging
				Me._ttcode = value
				Me.SendPropertyChanged("ttcode")
				Me.OnttcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_branch", DbType:="VarChar(4)")>  _
	Public Property branch() As String
		Get
			Return Me._branch
		End Get
		Set
			If (String.Equals(Me._branch, value) = false) Then
				Me.OnbranchChanging(value)
				Me.SendPropertyChanging
				Me._branch = value
				Me.SendPropertyChanged("branch")
				Me.OnbranchChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.syslctnm")>  _
Partial Public Class syslctnm
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _lcnsid As Integer
	
	Private _lctnmcd As Integer
	
	Private _prefixcd As System.Nullable(Of Short)
	
	Private _thanm As String
	
	Private _engnm As String
	
	Private _suffixcd As System.Nullable(Of Short)
	
	Private _lctst As Short
	
	Private _tpnost As System.Nullable(Of Short)
	
	Private _ltntpcd As System.Nullable(Of Integer)
	
	Private _hptno As String
	
	Private _lcttpcd As System.Nullable(Of Short)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _lctnmno As System.Nullable(Of Short)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _dvcd As Short
	
	Private _lmdfdate As Date
	
	Private _chngwtcd As Short
	
	Private _grplctnmcd As System.Nullable(Of Short)
	
	Private _thanmold As String
	
	Private _prefixcdold As System.Nullable(Of Short)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnprefixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnprefixcdChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub OnengnmChanging(value As String)
    End Sub
    Partial Private Sub OnengnmChanged()
    End Sub
    Partial Private Sub OnsuffixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsuffixcdChanged()
    End Sub
    Partial Private Sub OnlctstChanging(value As Short)
    End Sub
    Partial Private Sub OnlctstChanged()
    End Sub
    Partial Private Sub OntpnostChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OntpnostChanged()
    End Sub
    Partial Private Sub OnltntpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnltntpcdChanged()
    End Sub
    Partial Private Sub OnhptnoChanging(value As String)
    End Sub
    Partial Private Sub OnhptnoChanged()
    End Sub
    Partial Private Sub OnlcttpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlcttpcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnlctnmnoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlctnmnoChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As Short)
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As Date)
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As Short)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OngrplctnmcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OngrplctnmcdChanged()
    End Sub
    Partial Private Sub OnthanmoldChanging(value As String)
    End Sub
    Partial Private Sub OnthanmoldChanged()
    End Sub
    Partial Private Sub OnprefixcdoldChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnprefixcdoldChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property lcnsid() As Integer
		Get
			Return Me._lcnsid
		End Get
		Set
			If ((Me._lcnsid = value)  _
						= false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int NOT NULL")>  _
	Public Property lctnmcd() As Integer
		Get
			Return Me._lctnmcd
		End Get
		Set
			If ((Me._lctnmcd = value)  _
						= false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="SmallInt")>  _
	Public Property prefixcd() As System.Nullable(Of Short)
		Get
			Return Me._prefixcd
		End Get
		Set
			If (Me._prefixcd.Equals(value) = false) Then
				Me.OnprefixcdChanging(value)
				Me.SendPropertyChanging
				Me._prefixcd = value
				Me.SendPropertyChanged("prefixcd")
				Me.OnprefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="VarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnm", DbType:="VarChar(200)")>  _
	Public Property engnm() As String
		Get
			Return Me._engnm
		End Get
		Set
			If (String.Equals(Me._engnm, value) = false) Then
				Me.OnengnmChanging(value)
				Me.SendPropertyChanging
				Me._engnm = value
				Me.SendPropertyChanged("engnm")
				Me.OnengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suffixcd", DbType:="SmallInt")>  _
	Public Property suffixcd() As System.Nullable(Of Short)
		Get
			Return Me._suffixcd
		End Get
		Set
			If (Me._suffixcd.Equals(value) = false) Then
				Me.OnsuffixcdChanging(value)
				Me.SendPropertyChanging
				Me._suffixcd = value
				Me.SendPropertyChanged("suffixcd")
				Me.OnsuffixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctst", DbType:="SmallInt NOT NULL")>  _
	Public Property lctst() As Short
		Get
			Return Me._lctst
		End Get
		Set
			If ((Me._lctst = value)  _
						= false) Then
				Me.OnlctstChanging(value)
				Me.SendPropertyChanging
				Me._lctst = value
				Me.SendPropertyChanged("lctst")
				Me.OnlctstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tpnost", DbType:="SmallInt")>  _
	Public Property tpnost() As System.Nullable(Of Short)
		Get
			Return Me._tpnost
		End Get
		Set
			If (Me._tpnost.Equals(value) = false) Then
				Me.OntpnostChanging(value)
				Me.SendPropertyChanging
				Me._tpnost = value
				Me.SendPropertyChanged("tpnost")
				Me.OntpnostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ltntpcd", DbType:="Int")>  _
	Public Property ltntpcd() As System.Nullable(Of Integer)
		Get
			Return Me._ltntpcd
		End Get
		Set
			If (Me._ltntpcd.Equals(value) = false) Then
				Me.OnltntpcdChanging(value)
				Me.SendPropertyChanging
				Me._ltntpcd = value
				Me.SendPropertyChanged("ltntpcd")
				Me.OnltntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hptno", DbType:="VarChar(30)")>  _
	Public Property hptno() As String
		Get
			Return Me._hptno
		End Get
		Set
			If (String.Equals(Me._hptno, value) = false) Then
				Me.OnhptnoChanging(value)
				Me.SendPropertyChanging
				Me._hptno = value
				Me.SendPropertyChanged("hptno")
				Me.OnhptnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcttpcd", DbType:="SmallInt")>  _
	Public Property lcttpcd() As System.Nullable(Of Short)
		Get
			Return Me._lcttpcd
		End Get
		Set
			If (Me._lcttpcd.Equals(value) = false) Then
				Me.OnlcttpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcttpcd = value
				Me.SendPropertyChanged("lcttpcd")
				Me.OnlcttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmno", DbType:="SmallInt")>  _
	Public Property lctnmno() As System.Nullable(Of Short)
		Get
			Return Me._lctnmno
		End Get
		Set
			If (Me._lctnmno.Equals(value) = false) Then
				Me.OnlctnmnoChanging(value)
				Me.SendPropertyChanging
				Me._lctnmno = value
				Me.SendPropertyChanged("lctnmno")
				Me.OnlctnmnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="SmallInt NOT NULL")>  _
	Public Property dvcd() As Short
		Get
			Return Me._dvcd
		End Get
		Set
			If ((Me._dvcd = value)  _
						= false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2 NOT NULL")>  _
	Public Property lmdfdate() As Date
		Get
			Return Me._lmdfdate
		End Get
		Set
			If ((Me._lmdfdate = value)  _
						= false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt NOT NULL")>  _
	Public Property chngwtcd() As Short
		Get
			Return Me._chngwtcd
		End Get
		Set
			If ((Me._chngwtcd = value)  _
						= false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grplctnmcd", DbType:="SmallInt")>  _
	Public Property grplctnmcd() As System.Nullable(Of Short)
		Get
			Return Me._grplctnmcd
		End Get
		Set
			If (Me._grplctnmcd.Equals(value) = false) Then
				Me.OngrplctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._grplctnmcd = value
				Me.SendPropertyChanged("grplctnmcd")
				Me.OngrplctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanmold", DbType:="VarChar(200)")>  _
	Public Property thanmold() As String
		Get
			Return Me._thanmold
		End Get
		Set
			If (String.Equals(Me._thanmold, value) = false) Then
				Me.OnthanmoldChanging(value)
				Me.SendPropertyChanging
				Me._thanmold = value
				Me.SendPropertyChanged("thanmold")
				Me.OnthanmoldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcdold", DbType:="SmallInt")>  _
	Public Property prefixcdold() As System.Nullable(Of Short)
		Get
			Return Me._prefixcdold
		End Get
		Set
			If (Me._prefixcdold.Equals(value) = false) Then
				Me.OnprefixcdoldChanging(value)
				Me.SendPropertyChanging
				Me._prefixcdold = value
				Me.SendPropertyChanged("prefixcdold")
				Me.OnprefixcdoldChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.sysusrid")>  _
Partial Public Class sysusrid
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _idcode As Integer
	
	Private _lcnsid As Integer
	
	Private _lcnscd As Integer
	
	Private _usrlcnsid As Integer
	
	Private _usrlcnscd As Integer
	
	Private _usrid As String
	
	Private _usrnm As String
	
	Private _pwd As String
	
	Private _usrst As Short
	
	Private _dvcd As System.Nullable(Of Short)
	
	Private _tel As String
	
	Private _email As String
	
	Private _chngwtcd As System.Nullable(Of Short)
	
	Private _stfcd As System.Nullable(Of Integer)
	
	Private _actcode As String
	
	Private _appvdate As Date
	
	Private _expdate As System.Nullable(Of Date)
	
	Private _loginst As Short
	
	Private _grpcd As Short
	
	Private _position As String
	
	Private _refno As String
	
	Private _ccdate As System.Nullable(Of Date)
	
	Private _ccremark As String
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidcodeChanging(value As Integer)
    End Sub
    Partial Private Sub OnidcodeChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnusrlcnsidChanging(value As Integer)
    End Sub
    Partial Private Sub OnusrlcnsidChanged()
    End Sub
    Partial Private Sub OnusrlcnscdChanging(value As Integer)
    End Sub
    Partial Private Sub OnusrlcnscdChanged()
    End Sub
    Partial Private Sub OnusridChanging(value As String)
    End Sub
    Partial Private Sub OnusridChanged()
    End Sub
    Partial Private Sub OnusrnmChanging(value As String)
    End Sub
    Partial Private Sub OnusrnmChanged()
    End Sub
    Partial Private Sub OnpwdChanging(value As String)
    End Sub
    Partial Private Sub OnpwdChanged()
    End Sub
    Partial Private Sub OnusrstChanging(value As Short)
    End Sub
    Partial Private Sub OnusrstChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstfcdChanged()
    End Sub
    Partial Private Sub OnactcodeChanging(value As String)
    End Sub
    Partial Private Sub OnactcodeChanged()
    End Sub
    Partial Private Sub OnappvdateChanging(value As Date)
    End Sub
    Partial Private Sub OnappvdateChanged()
    End Sub
    Partial Private Sub OnexpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnexpdateChanged()
    End Sub
    Partial Private Sub OnloginstChanging(value As Short)
    End Sub
    Partial Private Sub OnloginstChanged()
    End Sub
    Partial Private Sub OngrpcdChanging(value As Short)
    End Sub
    Partial Private Sub OngrpcdChanged()
    End Sub
    Partial Private Sub OnpositionChanging(value As String)
    End Sub
    Partial Private Sub OnpositionChanged()
    End Sub
    Partial Private Sub OnrefnoChanging(value As String)
    End Sub
    Partial Private Sub OnrefnoChanged()
    End Sub
    Partial Private Sub OnccdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnccdateChanged()
    End Sub
    Partial Private Sub OnccremarkChanging(value As String)
    End Sub
    Partial Private Sub OnccremarkChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idcode", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property idcode() As Integer
		Get
			Return Me._idcode
		End Get
		Set
			If ((Me._idcode = value)  _
						= false) Then
				Me.OnidcodeChanging(value)
				Me.SendPropertyChanging
				Me._idcode = value
				Me.SendPropertyChanged("idcode")
				Me.OnidcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property lcnsid() As Integer
		Get
			Return Me._lcnsid
		End Get
		Set
			If ((Me._lcnsid = value)  _
						= false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int NOT NULL")>  _
	Public Property lcnscd() As Integer
		Get
			Return Me._lcnscd
		End Get
		Set
			If ((Me._lcnscd = value)  _
						= false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usrlcnsid", DbType:="Int NOT NULL")>  _
	Public Property usrlcnsid() As Integer
		Get
			Return Me._usrlcnsid
		End Get
		Set
			If ((Me._usrlcnsid = value)  _
						= false) Then
				Me.OnusrlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._usrlcnsid = value
				Me.SendPropertyChanged("usrlcnsid")
				Me.OnusrlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usrlcnscd", DbType:="Int NOT NULL")>  _
	Public Property usrlcnscd() As Integer
		Get
			Return Me._usrlcnscd
		End Get
		Set
			If ((Me._usrlcnscd = value)  _
						= false) Then
				Me.OnusrlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._usrlcnscd = value
				Me.SendPropertyChanged("usrlcnscd")
				Me.OnusrlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usrid", DbType:="VarChar(20)")>  _
	Public Property usrid() As String
		Get
			Return Me._usrid
		End Get
		Set
			If (String.Equals(Me._usrid, value) = false) Then
				Me.OnusridChanging(value)
				Me.SendPropertyChanging
				Me._usrid = value
				Me.SendPropertyChanged("usrid")
				Me.OnusridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usrnm", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property usrnm() As String
		Get
			Return Me._usrnm
		End Get
		Set
			If (String.Equals(Me._usrnm, value) = false) Then
				Me.OnusrnmChanging(value)
				Me.SendPropertyChanging
				Me._usrnm = value
				Me.SendPropertyChanged("usrnm")
				Me.OnusrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd", DbType:="VarChar(250)")>  _
	Public Property pwd() As String
		Get
			Return Me._pwd
		End Get
		Set
			If (String.Equals(Me._pwd, value) = false) Then
				Me.OnpwdChanging(value)
				Me.SendPropertyChanging
				Me._pwd = value
				Me.SendPropertyChanged("pwd")
				Me.OnpwdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usrst", DbType:="SmallInt NOT NULL")>  _
	Public Property usrst() As Short
		Get
			Return Me._usrst
		End Get
		Set
			If ((Me._usrst = value)  _
						= false) Then
				Me.OnusrstChanging(value)
				Me.SendPropertyChanging
				Me._usrst = value
				Me.SendPropertyChanged("usrst")
				Me.OnusrstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="SmallInt")>  _
	Public Property dvcd() As System.Nullable(Of Short)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="VarChar(50)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="VarChar(200)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt")>  _
	Public Property chngwtcd() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stfcd", DbType:="Int")>  _
	Public Property stfcd() As System.Nullable(Of Integer)
		Get
			Return Me._stfcd
		End Get
		Set
			If (Me._stfcd.Equals(value) = false) Then
				Me.OnstfcdChanging(value)
				Me.SendPropertyChanging
				Me._stfcd = value
				Me.SendPropertyChanged("stfcd")
				Me.OnstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_actcode", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property actcode() As String
		Get
			Return Me._actcode
		End Get
		Set
			If (String.Equals(Me._actcode, value) = false) Then
				Me.OnactcodeChanging(value)
				Me.SendPropertyChanging
				Me._actcode = value
				Me.SendPropertyChanged("actcode")
				Me.OnactcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvdate", DbType:="Date NOT NULL")>  _
	Public Property appvdate() As Date
		Get
			Return Me._appvdate
		End Get
		Set
			If ((Me._appvdate = value)  _
						= false) Then
				Me.OnappvdateChanging(value)
				Me.SendPropertyChanging
				Me._appvdate = value
				Me.SendPropertyChanged("appvdate")
				Me.OnappvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expdate", DbType:="Date")>  _
	Public Property expdate() As System.Nullable(Of Date)
		Get
			Return Me._expdate
		End Get
		Set
			If (Me._expdate.Equals(value) = false) Then
				Me.OnexpdateChanging(value)
				Me.SendPropertyChanging
				Me._expdate = value
				Me.SendPropertyChanged("expdate")
				Me.OnexpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_loginst", DbType:="SmallInt NOT NULL")>  _
	Public Property loginst() As Short
		Get
			Return Me._loginst
		End Get
		Set
			If ((Me._loginst = value)  _
						= false) Then
				Me.OnloginstChanging(value)
				Me.SendPropertyChanging
				Me._loginst = value
				Me.SendPropertyChanged("loginst")
				Me.OnloginstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grpcd", DbType:="SmallInt NOT NULL")>  _
	Public Property grpcd() As Short
		Get
			Return Me._grpcd
		End Get
		Set
			If ((Me._grpcd = value)  _
						= false) Then
				Me.OngrpcdChanging(value)
				Me.SendPropertyChanging
				Me._grpcd = value
				Me.SendPropertyChanged("grpcd")
				Me.OngrpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_position", DbType:="VarChar(250)")>  _
	Public Property position() As String
		Get
			Return Me._position
		End Get
		Set
			If (String.Equals(Me._position, value) = false) Then
				Me.OnpositionChanging(value)
				Me.SendPropertyChanging
				Me._position = value
				Me.SendPropertyChanged("position")
				Me.OnpositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_refno", DbType:="VarChar(250)")>  _
	Public Property refno() As String
		Get
			Return Me._refno
		End Get
		Set
			If (String.Equals(Me._refno, value) = false) Then
				Me.OnrefnoChanging(value)
				Me.SendPropertyChanging
				Me._refno = value
				Me.SendPropertyChanged("refno")
				Me.OnrefnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccdate", DbType:="Date")>  _
	Public Property ccdate() As System.Nullable(Of Date)
		Get
			Return Me._ccdate
		End Get
		Set
			If (Me._ccdate.Equals(value) = false) Then
				Me.OnccdateChanging(value)
				Me.SendPropertyChanging
				Me._ccdate = value
				Me.SendPropertyChanged("ccdate")
				Me.OnccdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccremark", DbType:="VarChar(20)")>  _
	Public Property ccremark() As String
		Get
			Return Me._ccremark
		End Get
		Set
			If (String.Equals(Me._ccremark, value) = false) Then
				Me.OnccremarkChanging(value)
				Me.SendPropertyChanging
				Me._ccremark = value
				Me.SendPropertyChanged("ccremark")
				Me.OnccremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[fda.sysaddrhn]")>  _
Partial Public Class fda_sysaddrhn
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _lcnsid As Integer
	
	Private _lctcd As Integer
	
	Private _rid As Integer
	
	Private _houseno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnridChanging(value As Integer)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnhousenoChanging(value As String)
    End Sub
    Partial Private Sub OnhousenoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property lcnsid() As Integer
		Get
			Return Me._lcnsid
		End Get
		Set
			If ((Me._lcnsid = value)  _
						= false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int NOT NULL")>  _
	Public Property lctcd() As Integer
		Get
			Return Me._lctcd
		End Get
		Set
			If ((Me._lctcd = value)  _
						= false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="Int NOT NULL")>  _
	Public Property rid() As Integer
		Get
			Return Me._rid
		End Get
		Set
			If ((Me._rid = value)  _
						= false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_houseno", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property houseno() As String
		Get
			Return Me._houseno
		End Get
		Set
			If (String.Equals(Me._houseno, value) = false) Then
				Me.OnhousenoChanging(value)
				Me.SendPropertyChanging
				Me._houseno = value
				Me.SendPropertyChanged("houseno")
				Me.OnhousenoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.syschngwt")>  _
Partial Public Class syschngwt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _chngwtcd As Short
	
	Private _thachngwtnm As String
	
	Private _engchngwtnm As String
	
	Private _thacwabbr As String
	
	Private _engcwabbr As String
	
	Private _mapgis As System.Nullable(Of Short)
	
	Private _chngwtgrpcd As System.Nullable(Of Short)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As Short)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OnengchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnengchngwtnmChanged()
    End Sub
    Partial Private Sub OnthacwabbrChanging(value As String)
    End Sub
    Partial Private Sub OnthacwabbrChanged()
    End Sub
    Partial Private Sub OnengcwabbrChanging(value As String)
    End Sub
    Partial Private Sub OnengcwabbrChanged()
    End Sub
    Partial Private Sub OnmapgisChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnmapgisChanged()
    End Sub
    Partial Private Sub OnchngwtgrpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnchngwtgrpcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property chngwtcd() As Short
		Get
			Return Me._chngwtcd
		End Get
		Set
			If ((Me._chngwtcd = value)  _
						= false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="VarChar(120) NOT NULL", CanBeNull:=false)>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engchngwtnm", DbType:="VarChar(120)")>  _
	Public Property engchngwtnm() As String
		Get
			Return Me._engchngwtnm
		End Get
		Set
			If (String.Equals(Me._engchngwtnm, value) = false) Then
				Me.OnengchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._engchngwtnm = value
				Me.SendPropertyChanged("engchngwtnm")
				Me.OnengchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thacwabbr", DbType:="VarChar(5)")>  _
	Public Property thacwabbr() As String
		Get
			Return Me._thacwabbr
		End Get
		Set
			If (String.Equals(Me._thacwabbr, value) = false) Then
				Me.OnthacwabbrChanging(value)
				Me.SendPropertyChanging
				Me._thacwabbr = value
				Me.SendPropertyChanged("thacwabbr")
				Me.OnthacwabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engcwabbr", DbType:="VarChar(5)")>  _
	Public Property engcwabbr() As String
		Get
			Return Me._engcwabbr
		End Get
		Set
			If (String.Equals(Me._engcwabbr, value) = false) Then
				Me.OnengcwabbrChanging(value)
				Me.SendPropertyChanging
				Me._engcwabbr = value
				Me.SendPropertyChanged("engcwabbr")
				Me.OnengcwabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mapgis", DbType:="SmallInt")>  _
	Public Property mapgis() As System.Nullable(Of Short)
		Get
			Return Me._mapgis
		End Get
		Set
			If (Me._mapgis.Equals(value) = false) Then
				Me.OnmapgisChanging(value)
				Me.SendPropertyChanging
				Me._mapgis = value
				Me.SendPropertyChanged("mapgis")
				Me.OnmapgisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtgrpcd", DbType:="SmallInt")>  _
	Public Property chngwtgrpcd() As System.Nullable(Of Short)
		Get
			Return Me._chngwtgrpcd
		End Get
		Set
			If (Me._chngwtgrpcd.Equals(value) = false) Then
				Me.OnchngwtgrpcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtgrpcd = value
				Me.SendPropertyChanged("chngwtgrpcd")
				Me.OnchngwtgrpcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.sysamphr")>  _
Partial Public Class sysamphr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _chngwtcd As Short
	
	Private _amphrcd As Short
	
	Private _thaamphrnm As String
	
	Private _engamphrnm As String
	
	Private _mapgis As System.Nullable(Of Short)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As Short)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As Short)
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnengamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnengamphrnmChanged()
    End Sub
    Partial Private Sub OnmapgisChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnmapgisChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property chngwtcd() As Short
		Get
			Return Me._chngwtcd
		End Get
		Set
			If ((Me._chngwtcd = value)  _
						= false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property amphrcd() As Short
		Get
			Return Me._amphrcd
		End Get
		Set
			If ((Me._amphrcd = value)  _
						= false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="VarChar(120) NOT NULL", CanBeNull:=false)>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engamphrnm", DbType:="VarChar(120)")>  _
	Public Property engamphrnm() As String
		Get
			Return Me._engamphrnm
		End Get
		Set
			If (String.Equals(Me._engamphrnm, value) = false) Then
				Me.OnengamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._engamphrnm = value
				Me.SendPropertyChanged("engamphrnm")
				Me.OnengamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mapgis", DbType:="SmallInt")>  _
	Public Property mapgis() As System.Nullable(Of Short)
		Get
			Return Me._mapgis
		End Get
		Set
			If (Me._mapgis.Equals(value) = false) Then
				Me.OnmapgisChanging(value)
				Me.SendPropertyChanging
				Me._mapgis = value
				Me.SendPropertyChanged("mapgis")
				Me.OnmapgisChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.systhmbl")>  _
Partial Public Class systhmbl
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _chngwtcd As Short
	
	Private _amphrcd As Short
	
	Private _thmblcd As Short
	
	Private _thathmblnm As String
	
	Private _engthmblnm As String
	
	Private _mapgis As System.Nullable(Of Short)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As Short)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As Short)
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As Short)
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnengthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnengthmblnmChanged()
    End Sub
    Partial Private Sub OnmapgisChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnmapgisChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property chngwtcd() As Short
		Get
			Return Me._chngwtcd
		End Get
		Set
			If ((Me._chngwtcd = value)  _
						= false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property amphrcd() As Short
		Get
			Return Me._amphrcd
		End Get
		Set
			If ((Me._amphrcd = value)  _
						= false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property thmblcd() As Short
		Get
			Return Me._thmblcd
		End Get
		Set
			If ((Me._thmblcd = value)  _
						= false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="VarChar(120)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engthmblnm", DbType:="VarChar(120)")>  _
	Public Property engthmblnm() As String
		Get
			Return Me._engthmblnm
		End Get
		Set
			If (String.Equals(Me._engthmblnm, value) = false) Then
				Me.OnengthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._engthmblnm = value
				Me.SendPropertyChanged("engthmblnm")
				Me.OnengthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mapgis", DbType:="SmallInt")>  _
	Public Property mapgis() As System.Nullable(Of Short)
		Get
			Return Me._mapgis
		End Get
		Set
			If (Me._mapgis.Equals(value) = false) Then
				Me.OnmapgisChanging(value)
				Me.SendPropertyChanging
				Me._mapgis = value
				Me.SendPropertyChanged("mapgis")
				Me.OnmapgisChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSESSION_UPLOAD")>  _
Partial Public Class TRANSESSION_UPLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer = CType(Nothing, Integer)
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _DOWNLOAD_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public ReadOnly Property ID() As Integer
		Get
			Return Me._ID
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPLOAD_DATE
		End Get
		Set
			If (Me._UPLOAD_DATE.Equals(value) = false) Then
				Me.OnUPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_DATE = value
				Me.SendPropertyChanged("UPLOAD_DATE")
				Me.OnUPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_ID", DbType:="Int")>  _
	Public Property DOWNLOAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWNLOAD_ID
		End Get
		Set
			If (Me._DOWNLOAD_ID.Equals(value) = false) Then
				Me.OnDOWNLOAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_ID = value
				Me.SendPropertyChanged("DOWNLOAD_ID")
				Me.OnDOWNLOAD_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSESSION_DOWNLOAD")>  _
Partial Public Class TRANSESSION_DOWNLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer = CType(Nothing, Integer)
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _DOWNLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOWNLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public ReadOnly Property ID() As Integer
		Get
			Return Me._ID
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_DATE", DbType:="DateTime")>  _
	Public Property DOWNLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOWNLOAD_DATE
		End Get
		Set
			If (Me._DOWNLOAD_DATE.Equals(value) = false) Then
				Me.OnDOWNLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_DATE = value
				Me.SendPropertyChanged("DOWNLOAD_DATE")
				Me.OnDOWNLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SYSTEM_NAME")>  _
Partial Public Class SYSTEM_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SYSTEM_ID As System.Nullable(Of Integer)
	
	Private _SYSTEM_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSYSTEM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYSTEM_IDChanged()
    End Sub
    Partial Private Sub OnSYSTEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSYSTEM_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_ID", DbType:="Int", IsPrimaryKey:=true)>  _
	Public Property SYSTEM_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYSTEM_ID
		End Get
		Set
			If (Me._SYSTEM_ID.Equals(value) = false) Then
				Me.OnSYSTEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_ID = value
				Me.SendPropertyChanged("SYSTEM_ID")
				Me.OnSYSTEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SYSTEM_NAME() As String
		Get
			Return Me._SYSTEM_NAME
		End Get
		Set
			If (String.Equals(Me._SYSTEM_NAME, value) = false) Then
				Me.OnSYSTEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_NAME = value
				Me.SendPropertyChanged("SYSTEM_NAME")
				Me.OnSYSTEM_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PROCESS_NAME")>  _
Partial Public Class PROCESS_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_NAME As String
	
	Private _SYSTEM_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnSYSTEM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYSTEM_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int", IsPrimaryKey:=true)>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_ID", DbType:="Int")>  _
	Public Property SYSTEM_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYSTEM_ID
		End Get
		Set
			If (Me._SYSTEM_ID.Equals(value) = false) Then
				Me.OnSYSTEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_ID = value
				Me.SendPropertyChanged("SYSTEM_ID")
				Me.OnSYSTEM_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
