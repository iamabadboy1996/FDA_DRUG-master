'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="LGT_DRUG")>  _
Partial Public Class Linq_DRUGDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertdarqt(instance As darqt)
    End Sub
  Partial Private Sub Updatedarqt(instance As darqt)
    End Sub
  Partial Private Sub Deletedarqt(instance As darqt)
    End Sub
  Partial Private Sub Insertdarqtphr(instance As darqtphr)
    End Sub
  Partial Private Sub Updatedarqtphr(instance As darqtphr)
    End Sub
  Partial Private Sub Deletedarqtphr(instance As darqtphr)
    End Sub
  Partial Private Sub Insertdacnc(instance As dacnc)
    End Sub
  Partial Private Sub Updatedacnc(instance As dacnc)
    End Sub
  Partial Private Sub Deletedacnc(instance As dacnc)
    End Sub
  Partial Private Sub Insertdacncc(instance As dacncc)
    End Sub
  Partial Private Sub Updatedacncc(instance As dacncc)
    End Sub
  Partial Private Sub Deletedacncc(instance As dacncc)
    End Sub
  Partial Private Sub Insertdalcntype(instance As dalcntype)
    End Sub
  Partial Private Sub Updatedalcntype(instance As dalcntype)
    End Sub
  Partial Private Sub Deletedalcntype(instance As dalcntype)
    End Sub
  Partial Private Sub Insertdalcnphr(instance As dalcnphr)
    End Sub
  Partial Private Sub Updatedalcnphr(instance As dalcnphr)
    End Sub
  Partial Private Sub Deletedalcnphr(instance As dalcnphr)
    End Sub
  Partial Private Sub Insertdalcnkep(instance As dalcnkep)
    End Sub
  Partial Private Sub Updatedalcnkep(instance As dalcnkep)
    End Sub
  Partial Private Sub Deletedalcnkep(instance As dalcnkep)
    End Sub
  Partial Private Sub Insertdalcn(instance As dalcn)
    End Sub
  Partial Private Sub Updatedalcn(instance As dalcn)
    End Sub
  Partial Private Sub Deletedalcn(instance As dalcn)
    End Sub
    Partial Private Sub Insertsysplace(instance As sysplace)
    End Sub
    Partial Private Sub Updatesysplace(instance As sysplace)
    End Sub
    Partial Private Sub Deletesysplace(instance As sysplace)
    End Sub
#End Region

    Public Sub New()
        MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LGT_DRUGConnectionString").ConnectionString, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property darqts() As System.Data.Linq.Table(Of darqt)
        Get
            Return Me.GetTable(Of darqt)()
        End Get
    End Property

    Public ReadOnly Property darqtphrs() As System.Data.Linq.Table(Of darqtphr)
        Get
            Return Me.GetTable(Of darqtphr)()
        End Get
    End Property

    Public ReadOnly Property dacncs() As System.Data.Linq.Table(Of dacnc)
        Get
            Return Me.GetTable(Of dacnc)()
        End Get
    End Property

    Public ReadOnly Property dacnccs() As System.Data.Linq.Table(Of dacncc)
        Get
            Return Me.GetTable(Of dacncc)()
        End Get
    End Property

    Public ReadOnly Property dalcntypes() As System.Data.Linq.Table(Of dalcntype)
        Get
            Return Me.GetTable(Of dalcntype)()
        End Get
    End Property

    Public ReadOnly Property dalcnphrs() As System.Data.Linq.Table(Of dalcnphr)
        Get
            Return Me.GetTable(Of dalcnphr)()
        End Get
    End Property

    Public ReadOnly Property dalcnkeps() As System.Data.Linq.Table(Of dalcnkep)
        Get
            Return Me.GetTable(Of dalcnkep)()
        End Get
    End Property

    Public ReadOnly Property dalcns() As System.Data.Linq.Table(Of dalcn)
        Get
            Return Me.GetTable(Of dalcn)()
        End Get
    End Property

    Public ReadOnly Property sysplaces() As System.Data.Linq.Table(Of sysplace)
        Get
            Return Me.GetTable(Of sysplace)()
        End Get
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.darqt")> _
Partial Public Class darqt
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _pvncd As Short

    Private _lcntpcd As String

    Private _rcvno As Integer

    Private _pvnabbr As String

    Private _rcvdate As Date

    Private _lcnsid As Integer

    Private _lcnscd As Integer

    Private _lctnmcd As Integer

    Private _lctcd As Integer

    Private _bsnid As Integer

    Private _bsncd As Integer

    Private _bsnlctcd As Integer

    Private _opentime As String

    Private _bsnage As System.Nullable(Of Short)

    Private _remark As String

    Private _phrflg As System.Nullable(Of Char)

    Private _cnsdcd As Short

    Private _cnsddate As System.Nullable(Of Date)

    Private _appdate As System.Nullable(Of Date)

    Private _expyear As System.Nullable(Of Short)

    Private _lcnno As System.Nullable(Of Integer)

    Private _fdano As String

    Private _cscd As System.Nullable(Of Short)

    Private _rqttpcd As System.Nullable(Of Short)

    Private _cndno As System.Nullable(Of Integer)

    Private _jpctpcd As Short

    Private _dvcd As System.Nullable(Of Short)

    Private _feepayst As System.Nullable(Of Short)

    Private _feetpcd As System.Nullable(Of Integer)

    Private _feeno As System.Nullable(Of Integer)

    Private _lstfcd As Integer

    Private _lmdfdate As Date

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpvncdChanging(value As Short)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As Integer)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As Date)
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnbsnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnbsnidChanged()
    End Sub
    Partial Private Sub OnbsncdChanging(value As Integer)
    End Sub
    Partial Private Sub OnbsncdChanged()
    End Sub
    Partial Private Sub OnbsnlctcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnbsnlctcdChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OnbsnageChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnbsnageChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnphrflgChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnphrflgChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As Short)
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OncnsddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncnsddateChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnexpyearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnexpyearChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnfdanoChanging(value As String)
    End Sub
    Partial Private Sub OnfdanoChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OnrqttpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnrqttpcdChanged()
    End Sub
    Partial Private Sub OncndnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncndnoChanged()
    End Sub
    Partial Private Sub OnjpctpcdChanging(value As Short)
    End Sub
    Partial Private Sub OnjpctpcdChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnfeepaystChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfeepaystChanged()
    End Sub
    Partial Private Sub OnfeetpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeetpcdChanged()
    End Sub
    Partial Private Sub OnfeenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeenoChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As Date)
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt NOT NULL")> _
    Public Property pvncd() As Short
        Get
            Return Me._pvncd
        End Get
        Set(value As Short)
            If ((Me._pvncd = value) _
                        = False) Then
                Me.OnpvncdChanging(value)
                Me.SendPropertyChanging()
                Me._pvncd = value
                Me.SendPropertyChanged("pvncd")
                Me.OnpvncdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4) NOT NULL", CanBeNull:=False)> _
    Public Property lcntpcd() As String
        Get
            Return Me._lcntpcd
        End Get
        Set(value As String)
            If (String.Equals(Me._lcntpcd, value) = False) Then
                Me.OnlcntpcdChanging(value)
                Me.SendPropertyChanging()
                Me._lcntpcd = value
                Me.SendPropertyChanged("lcntpcd")
                Me.OnlcntpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int NOT NULL", IsPrimaryKey:=True)> _
    Public Property rcvno() As Integer
        Get
            Return Me._rcvno
        End Get
        Set(value As Integer)
            If ((Me._rcvno = value) _
                        = False) Then
                Me.OnrcvnoChanging(value)
                Me.SendPropertyChanging()
                Me._rcvno = value
                Me.SendPropertyChanged("rcvno")
                Me.OnrcvnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)> _
    Public Property pvnabbr() As String
        Get
            Return Me._pvnabbr
        End Get
        Set(value As String)
            If (String.Equals(Me._pvnabbr, value) = False) Then
                Me.OnpvnabbrChanging(value)
                Me.SendPropertyChanging()
                Me._pvnabbr = value
                Me.SendPropertyChanged("pvnabbr")
                Me.OnpvnabbrChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date NOT NULL")> _
    Public Property rcvdate() As Date
        Get
            Return Me._rcvdate
        End Get
        Set(value As Date)
            If ((Me._rcvdate = value) _
                        = False) Then
                Me.OnrcvdateChanging(value)
                Me.SendPropertyChanging()
                Me._rcvdate = value
                Me.SendPropertyChanged("rcvdate")
                Me.OnrcvdateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int NOT NULL")> _
    Public Property lcnsid() As Integer
        Get
            Return Me._lcnsid
        End Get
        Set(value As Integer)
            If ((Me._lcnsid = value) _
                        = False) Then
                Me.OnlcnsidChanging(value)
                Me.SendPropertyChanging()
                Me._lcnsid = value
                Me.SendPropertyChanged("lcnsid")
                Me.OnlcnsidChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int NOT NULL")> _
    Public Property lcnscd() As Integer
        Get
            Return Me._lcnscd
        End Get
        Set(value As Integer)
            If ((Me._lcnscd = value) _
                        = False) Then
                Me.OnlcnscdChanging(value)
                Me.SendPropertyChanging()
                Me._lcnscd = value
                Me.SendPropertyChanged("lcnscd")
                Me.OnlcnscdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int NOT NULL")> _
    Public Property lctnmcd() As Integer
        Get
            Return Me._lctnmcd
        End Get
        Set(value As Integer)
            If ((Me._lctnmcd = value) _
                        = False) Then
                Me.OnlctnmcdChanging(value)
                Me.SendPropertyChanging()
                Me._lctnmcd = value
                Me.SendPropertyChanged("lctnmcd")
                Me.OnlctnmcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int NOT NULL")> _
    Public Property lctcd() As Integer
        Get
            Return Me._lctcd
        End Get
        Set(value As Integer)
            If ((Me._lctcd = value) _
                        = False) Then
                Me.OnlctcdChanging(value)
                Me.SendPropertyChanging()
                Me._lctcd = value
                Me.SendPropertyChanged("lctcd")
                Me.OnlctcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnid", DbType:="Int NOT NULL")> _
    Public Property bsnid() As Integer
        Get
            Return Me._bsnid
        End Get
        Set(value As Integer)
            If ((Me._bsnid = value) _
                        = False) Then
                Me.OnbsnidChanging(value)
                Me.SendPropertyChanging()
                Me._bsnid = value
                Me.SendPropertyChanged("bsnid")
                Me.OnbsnidChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsncd", DbType:="Int NOT NULL")> _
    Public Property bsncd() As Integer
        Get
            Return Me._bsncd
        End Get
        Set(value As Integer)
            If ((Me._bsncd = value) _
                        = False) Then
                Me.OnbsncdChanging(value)
                Me.SendPropertyChanging()
                Me._bsncd = value
                Me.SendPropertyChanged("bsncd")
                Me.OnbsncdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnlctcd", DbType:="Int NOT NULL")> _
    Public Property bsnlctcd() As Integer
        Get
            Return Me._bsnlctcd
        End Get
        Set(value As Integer)
            If ((Me._bsnlctcd = value) _
                        = False) Then
                Me.OnbsnlctcdChanging(value)
                Me.SendPropertyChanging()
                Me._bsnlctcd = value
                Me.SendPropertyChanged("bsnlctcd")
                Me.OnbsnlctcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="VarChar(150)")> _
    Public Property opentime() As String
        Get
            Return Me._opentime
        End Get
        Set(value As String)
            If (String.Equals(Me._opentime, value) = False) Then
                Me.OnopentimeChanging(value)
                Me.SendPropertyChanging()
                Me._opentime = value
                Me.SendPropertyChanged("opentime")
                Me.OnopentimeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnage", DbType:="SmallInt")> _
    Public Property bsnage() As System.Nullable(Of Short)
        Get
            Return Me._bsnage
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._bsnage.Equals(value) = False) Then
                Me.OnbsnageChanging(value)
                Me.SendPropertyChanging()
                Me._bsnage = value
                Me.SendPropertyChanged("bsnage")
                Me.OnbsnageChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(100)")> _
    Public Property remark() As String
        Get
            Return Me._remark
        End Get
        Set(value As String)
            If (String.Equals(Me._remark, value) = False) Then
                Me.OnremarkChanging(value)
                Me.SendPropertyChanging()
                Me._remark = value
                Me.SendPropertyChanged("remark")
                Me.OnremarkChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrflg", DbType:="Char(1)")> _
    Public Property phrflg() As System.Nullable(Of Char)
        Get
            Return Me._phrflg
        End Get
        Set(value As System.Nullable(Of Char))
            If (Me._phrflg.Equals(value) = False) Then
                Me.OnphrflgChanging(value)
                Me.SendPropertyChanging()
                Me._phrflg = value
                Me.SendPropertyChanged("phrflg")
                Me.OnphrflgChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="SmallInt NOT NULL")> _
    Public Property cnsdcd() As Short
        Get
            Return Me._cnsdcd
        End Get
        Set(value As Short)
            If ((Me._cnsdcd = value) _
                        = False) Then
                Me.OncnsdcdChanging(value)
                Me.SendPropertyChanging()
                Me._cnsdcd = value
                Me.SendPropertyChanged("cnsdcd")
                Me.OncnsdcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsddate", DbType:="Date")> _
    Public Property cnsddate() As System.Nullable(Of Date)
        Get
            Return Me._cnsddate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._cnsddate.Equals(value) = False) Then
                Me.OncnsddateChanging(value)
                Me.SendPropertyChanging()
                Me._cnsddate = value
                Me.SendPropertyChanged("cnsddate")
                Me.OncnsddateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")> _
    Public Property appdate() As System.Nullable(Of Date)
        Get
            Return Me._appdate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._appdate.Equals(value) = False) Then
                Me.OnappdateChanging(value)
                Me.SendPropertyChanging()
                Me._appdate = value
                Me.SendPropertyChanged("appdate")
                Me.OnappdateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expyear", DbType:="SmallInt")> _
    Public Property expyear() As System.Nullable(Of Short)
        Get
            Return Me._expyear
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._expyear.Equals(value) = False) Then
                Me.OnexpyearChanging(value)
                Me.SendPropertyChanging()
                Me._expyear = value
                Me.SendPropertyChanged("expyear")
                Me.OnexpyearChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")> _
    Public Property lcnno() As System.Nullable(Of Integer)
        Get
            Return Me._lcnno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lcnno.Equals(value) = False) Then
                Me.OnlcnnoChanging(value)
                Me.SendPropertyChanging()
                Me._lcnno = value
                Me.SendPropertyChanged("lcnno")
                Me.OnlcnnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdano", DbType:="VarChar(8)")> _
    Public Property fdano() As String
        Get
            Return Me._fdano
        End Get
        Set(value As String)
            If (String.Equals(Me._fdano, value) = False) Then
                Me.OnfdanoChanging(value)
                Me.SendPropertyChanging()
                Me._fdano = value
                Me.SendPropertyChanged("fdano")
                Me.OnfdanoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="SmallInt")> _
    Public Property cscd() As System.Nullable(Of Short)
        Get
            Return Me._cscd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._cscd.Equals(value) = False) Then
                Me.OncscdChanging(value)
                Me.SendPropertyChanging()
                Me._cscd = value
                Me.SendPropertyChanged("cscd")
                Me.OncscdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rqttpcd", DbType:="SmallInt")> _
    Public Property rqttpcd() As System.Nullable(Of Short)
        Get
            Return Me._rqttpcd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._rqttpcd.Equals(value) = False) Then
                Me.OnrqttpcdChanging(value)
                Me.SendPropertyChanging()
                Me._rqttpcd = value
                Me.SendPropertyChanged("rqttpcd")
                Me.OnrqttpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cndno", DbType:="Int")> _
    Public Property cndno() As System.Nullable(Of Integer)
        Get
            Return Me._cndno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._cndno.Equals(value) = False) Then
                Me.OncndnoChanging(value)
                Me.SendPropertyChanging()
                Me._cndno = value
                Me.SendPropertyChanged("cndno")
                Me.OncndnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpcd", DbType:="SmallInt NOT NULL")> _
    Public Property jpctpcd() As Short
        Get
            Return Me._jpctpcd
        End Get
        Set(value As Short)
            If ((Me._jpctpcd = value) _
                        = False) Then
                Me.OnjpctpcdChanging(value)
                Me.SendPropertyChanging()
                Me._jpctpcd = value
                Me.SendPropertyChanged("jpctpcd")
                Me.OnjpctpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="SmallInt")> _
    Public Property dvcd() As System.Nullable(Of Short)
        Get
            Return Me._dvcd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._dvcd.Equals(value) = False) Then
                Me.OndvcdChanging(value)
                Me.SendPropertyChanging()
                Me._dvcd = value
                Me.SendPropertyChanged("dvcd")
                Me.OndvcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feepayst", DbType:="SmallInt")> _
    Public Property feepayst() As System.Nullable(Of Short)
        Get
            Return Me._feepayst
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._feepayst.Equals(value) = False) Then
                Me.OnfeepaystChanging(value)
                Me.SendPropertyChanging()
                Me._feepayst = value
                Me.SendPropertyChanged("feepayst")
                Me.OnfeepaystChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feetpcd", DbType:="Int")> _
    Public Property feetpcd() As System.Nullable(Of Integer)
        Get
            Return Me._feetpcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._feetpcd.Equals(value) = False) Then
                Me.OnfeetpcdChanging(value)
                Me.SendPropertyChanging()
                Me._feetpcd = value
                Me.SendPropertyChanged("feetpcd")
                Me.OnfeetpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feeno", DbType:="Int")> _
    Public Property feeno() As System.Nullable(Of Integer)
        Get
            Return Me._feeno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._feeno.Equals(value) = False) Then
                Me.OnfeenoChanging(value)
                Me.SendPropertyChanging()
                Me._feeno = value
                Me.SendPropertyChanged("feeno")
                Me.OnfeenoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int NOT NULL")> _
    Public Property lstfcd() As Integer
        Get
            Return Me._lstfcd
        End Get
        Set(value As Integer)
            If ((Me._lstfcd = value) _
                        = False) Then
                Me.OnlstfcdChanging(value)
                Me.SendPropertyChanging()
                Me._lstfcd = value
                Me.SendPropertyChanged("lstfcd")
                Me.OnlstfcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2 NOT NULL")> _
    Public Property lmdfdate() As Date
        Get
            Return Me._lmdfdate
        End Get
        Set(value As Date)
            If ((Me._lmdfdate = value) _
                        = False) Then
                Me.OnlmdfdateChanging(value)
                Me.SendPropertyChanging()
                Me._lmdfdate = value
                Me.SendPropertyChanged("lmdfdate")
                Me.OnlmdfdateChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.darqtphr")> _
Partial Public Class darqtphr
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _pvncd As System.Nullable(Of Short)

    Private _lcntpcd As String

    Private _rcvno As System.Nullable(Of Integer)

    Private _phrcd As System.Nullable(Of Short)

    Private _phrid As System.Nullable(Of Integer)

    Private _phrnmcd As System.Nullable(Of Integer)

    Private _phrno As String

    Private _opentime As String

    Private _functcd As System.Nullable(Of Short)

    Private _orderno As System.Nullable(Of Short)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnphrcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnphrcdChanged()
    End Sub
    Partial Private Sub OnphridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphridChanged()
    End Sub
    Partial Private Sub OnphrnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphrnmcdChanged()
    End Sub
    Partial Private Sub OnphrnoChanging(value As String)
    End Sub
    Partial Private Sub OnphrnoChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OnfunctcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfunctcdChanged()
    End Sub
    Partial Private Sub OnordernoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnordernoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")> _
    Public Property pvncd() As System.Nullable(Of Short)
        Get
            Return Me._pvncd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._pvncd.Equals(value) = False) Then
                Me.OnpvncdChanging(value)
                Me.SendPropertyChanging()
                Me._pvncd = value
                Me.SendPropertyChanged("pvncd")
                Me.OnpvncdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")> _
    Public Property lcntpcd() As String
        Get
            Return Me._lcntpcd
        End Get
        Set(value As String)
            If (String.Equals(Me._lcntpcd, value) = False) Then
                Me.OnlcntpcdChanging(value)
                Me.SendPropertyChanging()
                Me._lcntpcd = value
                Me.SendPropertyChanged("lcntpcd")
                Me.OnlcntpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")> _
    Public Property rcvno() As System.Nullable(Of Integer)
        Get
            Return Me._rcvno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._rcvno.Equals(value) = False) Then
                Me.OnrcvnoChanging(value)
                Me.SendPropertyChanging()
                Me._rcvno = value
                Me.SendPropertyChanged("rcvno")
                Me.OnrcvnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrcd", DbType:="SmallInt", IsPrimaryKey:=True)> _
    Public Property phrcd() As System.Nullable(Of Short)
        Get
            Return Me._phrcd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._phrcd.Equals(value) = False) Then
                Me.OnphrcdChanging(value)
                Me.SendPropertyChanging()
                Me._phrcd = value
                Me.SendPropertyChanged("phrcd")
                Me.OnphrcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrid", DbType:="Int")> _
    Public Property phrid() As System.Nullable(Of Integer)
        Get
            Return Me._phrid
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._phrid.Equals(value) = False) Then
                Me.OnphridChanging(value)
                Me.SendPropertyChanging()
                Me._phrid = value
                Me.SendPropertyChanged("phrid")
                Me.OnphridChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrnmcd", DbType:="Int")> _
    Public Property phrnmcd() As System.Nullable(Of Integer)
        Get
            Return Me._phrnmcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._phrnmcd.Equals(value) = False) Then
                Me.OnphrnmcdChanging(value)
                Me.SendPropertyChanging()
                Me._phrnmcd = value
                Me.SendPropertyChanged("phrnmcd")
                Me.OnphrnmcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrno", DbType:="VarChar(20)")> _
    Public Property phrno() As String
        Get
            Return Me._phrno
        End Get
        Set(value As String)
            If (String.Equals(Me._phrno, value) = False) Then
                Me.OnphrnoChanging(value)
                Me.SendPropertyChanging()
                Me._phrno = value
                Me.SendPropertyChanged("phrno")
                Me.OnphrnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="VarChar(150)")> _
    Public Property opentime() As String
        Get
            Return Me._opentime
        End Get
        Set(value As String)
            If (String.Equals(Me._opentime, value) = False) Then
                Me.OnopentimeChanging(value)
                Me.SendPropertyChanging()
                Me._opentime = value
                Me.SendPropertyChanged("opentime")
                Me.OnopentimeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_functcd", DbType:="SmallInt")> _
    Public Property functcd() As System.Nullable(Of Short)
        Get
            Return Me._functcd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._functcd.Equals(value) = False) Then
                Me.OnfunctcdChanging(value)
                Me.SendPropertyChanging()
                Me._functcd = value
                Me.SendPropertyChanged("functcd")
                Me.OnfunctcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_orderno", DbType:="SmallInt")> _
    Public Property orderno() As System.Nullable(Of Short)
        Get
            Return Me._orderno
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._orderno.Equals(value) = False) Then
                Me.OnordernoChanging(value)
                Me.SendPropertyChanging()
                Me._orderno = value
                Me.SendPropertyChanged("orderno")
                Me.OnordernoChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dacnc")> _
Partial Public Class dacnc
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _cnccd As Short

    Private _cncnm As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncnccdChanging(value As Short)
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncncnmChanging(value As String)
    End Sub
    Partial Private Sub OncncnmChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="SmallInt NOT NULL", IsPrimaryKey:=True)> _
    Public Property cnccd() As Short
        Get
            Return Me._cnccd
        End Get
        Set(value As Short)
            If ((Me._cnccd = value) _
                        = False) Then
                Me.OncnccdChanging(value)
                Me.SendPropertyChanging()
                Me._cnccd = value
                Me.SendPropertyChanged("cnccd")
                Me.OncnccdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnm", DbType:="VarChar(20)")> _
    Public Property cncnm() As String
        Get
            Return Me._cncnm
        End Get
        Set(value As String)
            If (String.Equals(Me._cncnm, value) = False) Then
                Me.OncncnmChanging(value)
                Me.SendPropertyChanging()
                Me._cncnm = value
                Me.SendPropertyChanged("cncnm")
                Me.OncncnmChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dacnccs")> _
Partial Public Class dacncc
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _cnccscd As Short

    Private _cnccsnm As String

    Private _cnccsst As System.Nullable(Of Short)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncnccscdChanging(value As Short)
    End Sub
    Partial Private Sub OncnccscdChanged()
    End Sub
    Partial Private Sub OncnccsnmChanging(value As String)
    End Sub
    Partial Private Sub OncnccsnmChanged()
    End Sub
    Partial Private Sub OncnccsstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnccsstChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccscd", DbType:="SmallInt NOT NULL", IsPrimaryKey:=True)> _
    Public Property cnccscd() As Short
        Get
            Return Me._cnccscd
        End Get
        Set(value As Short)
            If ((Me._cnccscd = value) _
                        = False) Then
                Me.OncnccscdChanging(value)
                Me.SendPropertyChanging()
                Me._cnccscd = value
                Me.SendPropertyChanged("cnccscd")
                Me.OncnccscdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccsnm", DbType:="VarChar(50)")> _
    Public Property cnccsnm() As String
        Get
            Return Me._cnccsnm
        End Get
        Set(value As String)
            If (String.Equals(Me._cnccsnm, value) = False) Then
                Me.OncnccsnmChanging(value)
                Me.SendPropertyChanging()
                Me._cnccsnm = value
                Me.SendPropertyChanged("cnccsnm")
                Me.OncnccsnmChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccsst", DbType:="SmallInt")> _
    Public Property cnccsst() As System.Nullable(Of Short)
        Get
            Return Me._cnccsst
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._cnccsst.Equals(value) = False) Then
                Me.OncnccsstChanging(value)
                Me.SendPropertyChanging()
                Me._cnccsst = value
                Me.SendPropertyChanged("cnccsst")
                Me.OncnccsstChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dalcntype")> _
Partial Public Class dalcntype
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _lcntpcd As String

    Private _lcntpnm As String

    Private _lcntpnmeng As String

    Private _grplcncd As Short

    Private _useinpvn As Short

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcntpnmChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpnmChanged()
    End Sub
    Partial Private Sub OnlcntpnmengChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpnmengChanged()
    End Sub
    Partial Private Sub OngrplcncdChanging(value As Short)
    End Sub
    Partial Private Sub OngrplcncdChanged()
    End Sub
    Partial Private Sub OnuseinpvnChanging(value As Short)
    End Sub
    Partial Private Sub OnuseinpvnChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)> _
    Public Property lcntpcd() As String
        Get
            Return Me._lcntpcd
        End Get
        Set(value As String)
            If (String.Equals(Me._lcntpcd, value) = False) Then
                Me.OnlcntpcdChanging(value)
                Me.SendPropertyChanging()
                Me._lcntpcd = value
                Me.SendPropertyChanged("lcntpcd")
                Me.OnlcntpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpnm", DbType:="VarChar(80) NOT NULL", CanBeNull:=False)> _
    Public Property lcntpnm() As String
        Get
            Return Me._lcntpnm
        End Get
        Set(value As String)
            If (String.Equals(Me._lcntpnm, value) = False) Then
                Me.OnlcntpnmChanging(value)
                Me.SendPropertyChanging()
                Me._lcntpnm = value
                Me.SendPropertyChanged("lcntpnm")
                Me.OnlcntpnmChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpnmeng", DbType:="VarChar(150)")> _
    Public Property lcntpnmeng() As String
        Get
            Return Me._lcntpnmeng
        End Get
        Set(value As String)
            If (String.Equals(Me._lcntpnmeng, value) = False) Then
                Me.OnlcntpnmengChanging(value)
                Me.SendPropertyChanging()
                Me._lcntpnmeng = value
                Me.SendPropertyChanged("lcntpnmeng")
                Me.OnlcntpnmengChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grplcncd", DbType:="SmallInt NOT NULL")> _
    Public Property grplcncd() As Short
        Get
            Return Me._grplcncd
        End Get
        Set(value As Short)
            If ((Me._grplcncd = value) _
                        = False) Then
                Me.OngrplcncdChanging(value)
                Me.SendPropertyChanging()
                Me._grplcncd = value
                Me.SendPropertyChanged("grplcncd")
                Me.OngrplcncdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_useinpvn", DbType:="SmallInt NOT NULL")> _
    Public Property useinpvn() As Short
        Get
            Return Me._useinpvn
        End Get
        Set(value As Short)
            If ((Me._useinpvn = value) _
                        = False) Then
                Me.OnuseinpvnChanging(value)
                Me.SendPropertyChanging()
                Me._useinpvn = value
                Me.SendPropertyChanged("useinpvn")
                Me.OnuseinpvnChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dalcnphr")> _
Partial Public Class dalcnphr
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer = CType(Nothing, Integer)

    Private _pvncd As System.Nullable(Of Short)

    Private _lcntpcd As String

    Private _lcnno As System.Nullable(Of Integer)

    Private _phrcd As System.Nullable(Of Short)

    Private _phrid As System.Nullable(Of Integer)

    Private _phrnmcd As System.Nullable(Of Integer)

    Private _phrno As String

    Private _opentime As String

    Private _phrcncst As System.Nullable(Of Short)

    Private _functcd As System.Nullable(Of Short)

    Private _orderno As System.Nullable(Of Short)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnphrcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnphrcdChanged()
    End Sub
    Partial Private Sub OnphridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphridChanged()
    End Sub
    Partial Private Sub OnphrnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphrnmcdChanged()
    End Sub
    Partial Private Sub OnphrnoChanging(value As String)
    End Sub
    Partial Private Sub OnphrnoChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OnphrcncstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnphrcncstChanged()
    End Sub
    Partial Private Sub OnfunctcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfunctcdChanged()
    End Sub
    Partial Private Sub OnordernoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnordernoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True, UpdateCheck:=UpdateCheck.Never)> _
    Public ReadOnly Property ID() As Integer
        Get
            Return Me._ID
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")> _
    Public Property pvncd() As System.Nullable(Of Short)
        Get
            Return Me._pvncd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._pvncd.Equals(value) = False) Then
                Me.OnpvncdChanging(value)
                Me.SendPropertyChanging()
                Me._pvncd = value
                Me.SendPropertyChanged("pvncd")
                Me.OnpvncdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")> _
    Public Property lcntpcd() As String
        Get
            Return Me._lcntpcd
        End Get
        Set(value As String)
            If (String.Equals(Me._lcntpcd, value) = False) Then
                Me.OnlcntpcdChanging(value)
                Me.SendPropertyChanging()
                Me._lcntpcd = value
                Me.SendPropertyChanged("lcntpcd")
                Me.OnlcntpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")> _
    Public Property lcnno() As System.Nullable(Of Integer)
        Get
            Return Me._lcnno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lcnno.Equals(value) = False) Then
                Me.OnlcnnoChanging(value)
                Me.SendPropertyChanging()
                Me._lcnno = value
                Me.SendPropertyChanged("lcnno")
                Me.OnlcnnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrcd", DbType:="SmallInt")> _
    Public Property phrcd() As System.Nullable(Of Short)
        Get
            Return Me._phrcd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._phrcd.Equals(value) = False) Then
                Me.OnphrcdChanging(value)
                Me.SendPropertyChanging()
                Me._phrcd = value
                Me.SendPropertyChanged("phrcd")
                Me.OnphrcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrid", DbType:="Int")> _
    Public Property phrid() As System.Nullable(Of Integer)
        Get
            Return Me._phrid
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._phrid.Equals(value) = False) Then
                Me.OnphridChanging(value)
                Me.SendPropertyChanging()
                Me._phrid = value
                Me.SendPropertyChanged("phrid")
                Me.OnphridChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrnmcd", DbType:="Int")> _
    Public Property phrnmcd() As System.Nullable(Of Integer)
        Get
            Return Me._phrnmcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._phrnmcd.Equals(value) = False) Then
                Me.OnphrnmcdChanging(value)
                Me.SendPropertyChanging()
                Me._phrnmcd = value
                Me.SendPropertyChanged("phrnmcd")
                Me.OnphrnmcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrno", DbType:="VarChar(20)")> _
    Public Property phrno() As String
        Get
            Return Me._phrno
        End Get
        Set(value As String)
            If (String.Equals(Me._phrno, value) = False) Then
                Me.OnphrnoChanging(value)
                Me.SendPropertyChanging()
                Me._phrno = value
                Me.SendPropertyChanged("phrno")
                Me.OnphrnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="VarChar(150)")> _
    Public Property opentime() As String
        Get
            Return Me._opentime
        End Get
        Set(value As String)
            If (String.Equals(Me._opentime, value) = False) Then
                Me.OnopentimeChanging(value)
                Me.SendPropertyChanging()
                Me._opentime = value
                Me.SendPropertyChanged("opentime")
                Me.OnopentimeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrcncst", DbType:="SmallInt")> _
    Public Property phrcncst() As System.Nullable(Of Short)
        Get
            Return Me._phrcncst
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._phrcncst.Equals(value) = False) Then
                Me.OnphrcncstChanging(value)
                Me.SendPropertyChanging()
                Me._phrcncst = value
                Me.SendPropertyChanged("phrcncst")
                Me.OnphrcncstChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_functcd", DbType:="SmallInt")> _
    Public Property functcd() As System.Nullable(Of Short)
        Get
            Return Me._functcd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._functcd.Equals(value) = False) Then
                Me.OnfunctcdChanging(value)
                Me.SendPropertyChanging()
                Me._functcd = value
                Me.SendPropertyChanged("functcd")
                Me.OnfunctcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_orderno", DbType:="SmallInt")> _
    Public Property orderno() As System.Nullable(Of Short)
        Get
            Return Me._orderno
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._orderno.Equals(value) = False) Then
                Me.OnordernoChanging(value)
                Me.SendPropertyChanging()
                Me._orderno = value
                Me.SendPropertyChanged("orderno")
                Me.OnordernoChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dalcnkep")> _
Partial Public Class dalcnkep
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer = CType(Nothing, Integer)

    Private _pvncd As System.Nullable(Of Short)

    Private _lcntpcd As String

    Private _lcnno As System.Nullable(Of Integer)

    Private _lcnsid As System.Nullable(Of Integer)

    Private _lctcd As System.Nullable(Of Integer)

    Private _keplctnmcd As System.Nullable(Of Integer)

    Private _orderno As System.Nullable(Of Short)

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnkeplctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnkeplctnmcdChanged()
    End Sub
    Partial Private Sub OnordernoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnordernoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True, UpdateCheck:=UpdateCheck.Never)> _
    Public ReadOnly Property ID() As Integer
        Get
            Return Me._ID
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")> _
    Public Property pvncd() As System.Nullable(Of Short)
        Get
            Return Me._pvncd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._pvncd.Equals(value) = False) Then
                Me.OnpvncdChanging(value)
                Me.SendPropertyChanging()
                Me._pvncd = value
                Me.SendPropertyChanged("pvncd")
                Me.OnpvncdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")> _
    Public Property lcntpcd() As String
        Get
            Return Me._lcntpcd
        End Get
        Set(value As String)
            If (String.Equals(Me._lcntpcd, value) = False) Then
                Me.OnlcntpcdChanging(value)
                Me.SendPropertyChanging()
                Me._lcntpcd = value
                Me.SendPropertyChanged("lcntpcd")
                Me.OnlcntpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")> _
    Public Property lcnno() As System.Nullable(Of Integer)
        Get
            Return Me._lcnno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lcnno.Equals(value) = False) Then
                Me.OnlcnnoChanging(value)
                Me.SendPropertyChanging()
                Me._lcnno = value
                Me.SendPropertyChanged("lcnno")
                Me.OnlcnnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")> _
    Public Property lcnsid() As System.Nullable(Of Integer)
        Get
            Return Me._lcnsid
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lcnsid.Equals(value) = False) Then
                Me.OnlcnsidChanging(value)
                Me.SendPropertyChanging()
                Me._lcnsid = value
                Me.SendPropertyChanged("lcnsid")
                Me.OnlcnsidChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")> _
    Public Property lctcd() As System.Nullable(Of Integer)
        Get
            Return Me._lctcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lctcd.Equals(value) = False) Then
                Me.OnlctcdChanging(value)
                Me.SendPropertyChanging()
                Me._lctcd = value
                Me.SendPropertyChanged("lctcd")
                Me.OnlctcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_keplctnmcd", DbType:="Int")> _
    Public Property keplctnmcd() As System.Nullable(Of Integer)
        Get
            Return Me._keplctnmcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._keplctnmcd.Equals(value) = False) Then
                Me.OnkeplctnmcdChanging(value)
                Me.SendPropertyChanging()
                Me._keplctnmcd = value
                Me.SendPropertyChanged("keplctnmcd")
                Me.OnkeplctnmcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_orderno", DbType:="SmallInt")> _
    Public Property orderno() As System.Nullable(Of Short)
        Get
            Return Me._orderno
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._orderno.Equals(value) = False) Then
                Me.OnordernoChanging(value)
                Me.SendPropertyChanging()
                Me._orderno = value
                Me.SendPropertyChanged("orderno")
                Me.OnordernoChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dalcn")> _
Partial Public Class dalcn
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer = CType(Nothing, Integer)

    Private _pvncd As System.Nullable(Of Short)

    Private _lcntpcd As String

    Private _lcnno As System.Nullable(Of Integer)

    Private _pvnabbr As String

    Private _lcnsid As System.Nullable(Of Integer)

    Private _lcnscd As System.Nullable(Of Integer)

    Private _lctnmcd As System.Nullable(Of Integer)

    Private _lctcd As System.Nullable(Of Integer)

    Private _bsnid As System.Nullable(Of Integer)

    Private _bsncd As System.Nullable(Of Integer)

    Private _bsnlctcd As System.Nullable(Of Integer)

    Private _bsnage As System.Nullable(Of Short)

    Private _opentime As String

    Private _remark As String

    Private _phrflg As System.Nullable(Of Char)

    Private _frtappdate As System.Nullable(Of Date)

    Private _appdate As System.Nullable(Of Date)

    Private _expyear As System.Nullable(Of Integer)

    Private _fdano As String

    Private _cnccd As System.Nullable(Of Short)

    Private _cnccscd As System.Nullable(Of Short)

    Private _cncdate As System.Nullable(Of Date)

    Private _lcnpayst As System.Nullable(Of Short)

    Private _rcptpayst As System.Nullable(Of Short)

    Private _amphrcd As System.Nullable(Of Short)

    Private _chngwtcd As System.Nullable(Of Short)

    Private _lstfcd As System.Nullable(Of Integer)

    Private _lmdfdate As System.Nullable(Of Date)

    Private _Co_name As String

    Private _rcvno As System.Nullable(Of Integer)

    Private _rcvdate As System.Nullable(Of Date)

    Private _comment As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnbsnidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsnidChanged()
    End Sub
    Partial Private Sub OnbsncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsncdChanged()
    End Sub
    Partial Private Sub OnbsnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsnlctcdChanged()
    End Sub
    Partial Private Sub OnbsnageChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnbsnageChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnphrflgChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnphrflgChanged()
    End Sub
    Partial Private Sub OnfrtappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfrtappdateChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnexpyearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnexpyearChanged()
    End Sub
    Partial Private Sub OnfdanoChanging(value As String)
    End Sub
    Partial Private Sub OnfdanoChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncnccscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnccscdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnlcnpaystChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlcnpaystChanged()
    End Sub
    Partial Private Sub OnrcptpaystChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnrcptpaystChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnCo_nameChanging(value As String)
    End Sub
    Partial Private Sub OnCo_nameChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OncommentChanging(value As String)
    End Sub
    Partial Private Sub OncommentChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True, UpdateCheck:=UpdateCheck.Never)> _
    Public ReadOnly Property ID() As Integer
        Get
            Return Me._ID
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")> _
    Public Property pvncd() As System.Nullable(Of Short)
        Get
            Return Me._pvncd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._pvncd.Equals(value) = False) Then
                Me.OnpvncdChanging(value)
                Me.SendPropertyChanging()
                Me._pvncd = value
                Me.SendPropertyChanged("pvncd")
                Me.OnpvncdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")> _
    Public Property lcntpcd() As String
        Get
            Return Me._lcntpcd
        End Get
        Set(value As String)
            If (String.Equals(Me._lcntpcd, value) = False) Then
                Me.OnlcntpcdChanging(value)
                Me.SendPropertyChanging()
                Me._lcntpcd = value
                Me.SendPropertyChanged("lcntpcd")
                Me.OnlcntpcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")> _
    Public Property lcnno() As System.Nullable(Of Integer)
        Get
            Return Me._lcnno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lcnno.Equals(value) = False) Then
                Me.OnlcnnoChanging(value)
                Me.SendPropertyChanging()
                Me._lcnno = value
                Me.SendPropertyChanged("lcnno")
                Me.OnlcnnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="VarChar(5)")> _
    Public Property pvnabbr() As String
        Get
            Return Me._pvnabbr
        End Get
        Set(value As String)
            If (String.Equals(Me._pvnabbr, value) = False) Then
                Me.OnpvnabbrChanging(value)
                Me.SendPropertyChanging()
                Me._pvnabbr = value
                Me.SendPropertyChanged("pvnabbr")
                Me.OnpvnabbrChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")> _
    Public Property lcnsid() As System.Nullable(Of Integer)
        Get
            Return Me._lcnsid
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lcnsid.Equals(value) = False) Then
                Me.OnlcnsidChanging(value)
                Me.SendPropertyChanging()
                Me._lcnsid = value
                Me.SendPropertyChanged("lcnsid")
                Me.OnlcnsidChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")> _
    Public Property lcnscd() As System.Nullable(Of Integer)
        Get
            Return Me._lcnscd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lcnscd.Equals(value) = False) Then
                Me.OnlcnscdChanging(value)
                Me.SendPropertyChanging()
                Me._lcnscd = value
                Me.SendPropertyChanged("lcnscd")
                Me.OnlcnscdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")> _
    Public Property lctnmcd() As System.Nullable(Of Integer)
        Get
            Return Me._lctnmcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lctnmcd.Equals(value) = False) Then
                Me.OnlctnmcdChanging(value)
                Me.SendPropertyChanging()
                Me._lctnmcd = value
                Me.SendPropertyChanged("lctnmcd")
                Me.OnlctnmcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")> _
    Public Property lctcd() As System.Nullable(Of Integer)
        Get
            Return Me._lctcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lctcd.Equals(value) = False) Then
                Me.OnlctcdChanging(value)
                Me.SendPropertyChanging()
                Me._lctcd = value
                Me.SendPropertyChanged("lctcd")
                Me.OnlctcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnid", DbType:="Int")> _
    Public Property bsnid() As System.Nullable(Of Integer)
        Get
            Return Me._bsnid
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._bsnid.Equals(value) = False) Then
                Me.OnbsnidChanging(value)
                Me.SendPropertyChanging()
                Me._bsnid = value
                Me.SendPropertyChanged("bsnid")
                Me.OnbsnidChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsncd", DbType:="Int")> _
    Public Property bsncd() As System.Nullable(Of Integer)
        Get
            Return Me._bsncd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._bsncd.Equals(value) = False) Then
                Me.OnbsncdChanging(value)
                Me.SendPropertyChanging()
                Me._bsncd = value
                Me.SendPropertyChanged("bsncd")
                Me.OnbsncdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnlctcd", DbType:="Int")> _
    Public Property bsnlctcd() As System.Nullable(Of Integer)
        Get
            Return Me._bsnlctcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._bsnlctcd.Equals(value) = False) Then
                Me.OnbsnlctcdChanging(value)
                Me.SendPropertyChanging()
                Me._bsnlctcd = value
                Me.SendPropertyChanged("bsnlctcd")
                Me.OnbsnlctcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnage", DbType:="SmallInt")> _
    Public Property bsnage() As System.Nullable(Of Short)
        Get
            Return Me._bsnage
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._bsnage.Equals(value) = False) Then
                Me.OnbsnageChanging(value)
                Me.SendPropertyChanging()
                Me._bsnage = value
                Me.SendPropertyChanged("bsnage")
                Me.OnbsnageChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="VarChar(150)")> _
    Public Property opentime() As String
        Get
            Return Me._opentime
        End Get
        Set(value As String)
            If (String.Equals(Me._opentime, value) = False) Then
                Me.OnopentimeChanging(value)
                Me.SendPropertyChanging()
                Me._opentime = value
                Me.SendPropertyChanged("opentime")
                Me.OnopentimeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(200)")> _
    Public Property remark() As String
        Get
            Return Me._remark
        End Get
        Set(value As String)
            If (String.Equals(Me._remark, value) = False) Then
                Me.OnremarkChanging(value)
                Me.SendPropertyChanging()
                Me._remark = value
                Me.SendPropertyChanged("remark")
                Me.OnremarkChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrflg", DbType:="Char(1)")> _
    Public Property phrflg() As System.Nullable(Of Char)
        Get
            Return Me._phrflg
        End Get
        Set(value As System.Nullable(Of Char))
            If (Me._phrflg.Equals(value) = False) Then
                Me.OnphrflgChanging(value)
                Me.SendPropertyChanging()
                Me._phrflg = value
                Me.SendPropertyChanged("phrflg")
                Me.OnphrflgChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frtappdate", DbType:="Date")> _
    Public Property frtappdate() As System.Nullable(Of Date)
        Get
            Return Me._frtappdate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._frtappdate.Equals(value) = False) Then
                Me.OnfrtappdateChanging(value)
                Me.SendPropertyChanging()
                Me._frtappdate = value
                Me.SendPropertyChanged("frtappdate")
                Me.OnfrtappdateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")> _
    Public Property appdate() As System.Nullable(Of Date)
        Get
            Return Me._appdate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._appdate.Equals(value) = False) Then
                Me.OnappdateChanging(value)
                Me.SendPropertyChanging()
                Me._appdate = value
                Me.SendPropertyChanged("appdate")
                Me.OnappdateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expyear", DbType:="Int")> _
    Public Property expyear() As System.Nullable(Of Integer)
        Get
            Return Me._expyear
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._expyear.Equals(value) = False) Then
                Me.OnexpyearChanging(value)
                Me.SendPropertyChanging()
                Me._expyear = value
                Me.SendPropertyChanged("expyear")
                Me.OnexpyearChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdano", DbType:="VarChar(8)")> _
    Public Property fdano() As String
        Get
            Return Me._fdano
        End Get
        Set(value As String)
            If (String.Equals(Me._fdano, value) = False) Then
                Me.OnfdanoChanging(value)
                Me.SendPropertyChanging()
                Me._fdano = value
                Me.SendPropertyChanged("fdano")
                Me.OnfdanoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="SmallInt")> _
    Public Property cnccd() As System.Nullable(Of Short)
        Get
            Return Me._cnccd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._cnccd.Equals(value) = False) Then
                Me.OncnccdChanging(value)
                Me.SendPropertyChanging()
                Me._cnccd = value
                Me.SendPropertyChanged("cnccd")
                Me.OncnccdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccscd", DbType:="SmallInt")> _
    Public Property cnccscd() As System.Nullable(Of Short)
        Get
            Return Me._cnccscd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._cnccscd.Equals(value) = False) Then
                Me.OncnccscdChanging(value)
                Me.SendPropertyChanging()
                Me._cnccscd = value
                Me.SendPropertyChanged("cnccscd")
                Me.OncnccscdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")> _
    Public Property cncdate() As System.Nullable(Of Date)
        Get
            Return Me._cncdate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._cncdate.Equals(value) = False) Then
                Me.OncncdateChanging(value)
                Me.SendPropertyChanging()
                Me._cncdate = value
                Me.SendPropertyChanged("cncdate")
                Me.OncncdateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnpayst", DbType:="SmallInt")> _
    Public Property lcnpayst() As System.Nullable(Of Short)
        Get
            Return Me._lcnpayst
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._lcnpayst.Equals(value) = False) Then
                Me.OnlcnpaystChanging(value)
                Me.SendPropertyChanging()
                Me._lcnpayst = value
                Me.SendPropertyChanged("lcnpayst")
                Me.OnlcnpaystChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcptpayst", DbType:="SmallInt")> _
    Public Property rcptpayst() As System.Nullable(Of Short)
        Get
            Return Me._rcptpayst
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._rcptpayst.Equals(value) = False) Then
                Me.OnrcptpaystChanging(value)
                Me.SendPropertyChanging()
                Me._rcptpayst = value
                Me.SendPropertyChanged("rcptpayst")
                Me.OnrcptpaystChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="SmallInt")> _
    Public Property amphrcd() As System.Nullable(Of Short)
        Get
            Return Me._amphrcd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._amphrcd.Equals(value) = False) Then
                Me.OnamphrcdChanging(value)
                Me.SendPropertyChanging()
                Me._amphrcd = value
                Me.SendPropertyChanged("amphrcd")
                Me.OnamphrcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt")> _
    Public Property chngwtcd() As System.Nullable(Of Short)
        Get
            Return Me._chngwtcd
        End Get
        Set(value As System.Nullable(Of Short))
            If (Me._chngwtcd.Equals(value) = False) Then
                Me.OnchngwtcdChanging(value)
                Me.SendPropertyChanging()
                Me._chngwtcd = value
                Me.SendPropertyChanged("chngwtcd")
                Me.OnchngwtcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")> _
    Public Property lstfcd() As System.Nullable(Of Integer)
        Get
            Return Me._lstfcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._lstfcd.Equals(value) = False) Then
                Me.OnlstfcdChanging(value)
                Me.SendPropertyChanging()
                Me._lstfcd = value
                Me.SendPropertyChanged("lstfcd")
                Me.OnlstfcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")> _
    Public Property lmdfdate() As System.Nullable(Of Date)
        Get
            Return Me._lmdfdate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._lmdfdate.Equals(value) = False) Then
                Me.OnlmdfdateChanging(value)
                Me.SendPropertyChanging()
                Me._lmdfdate = value
                Me.SendPropertyChanged("lmdfdate")
                Me.OnlmdfdateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Co_name", DbType:="NVarChar(MAX)")> _
    Public Property Co_name() As String
        Get
            Return Me._Co_name
        End Get
        Set(value As String)
            If (String.Equals(Me._Co_name, value) = False) Then
                Me.OnCo_nameChanging(value)
                Me.SendPropertyChanging()
                Me._Co_name = value
                Me.SendPropertyChanged("Co_name")
                Me.OnCo_nameChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")> _
    Public Property rcvno() As System.Nullable(Of Integer)
        Get
            Return Me._rcvno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._rcvno.Equals(value) = False) Then
                Me.OnrcvnoChanging(value)
                Me.SendPropertyChanging()
                Me._rcvno = value
                Me.SendPropertyChanged("rcvno")
                Me.OnrcvnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")> _
    Public Property rcvdate() As System.Nullable(Of Date)
        Get
            Return Me._rcvdate
        End Get
        Set(value As System.Nullable(Of Date))
            If (Me._rcvdate.Equals(value) = False) Then
                Me.OnrcvdateChanging(value)
                Me.SendPropertyChanging()
                Me._rcvdate = value
                Me.SendPropertyChanged("rcvdate")
                Me.OnrcvdateChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_comment", DbType:="NVarChar(MAX)")> _
    Public Property comment() As String
        Get
            Return Me._comment
        End Get
        Set(value As String)
            If (String.Equals(Me._comment, value) = False) Then
                Me.OncommentChanging(value)
                Me.SendPropertyChanging()
                Me._comment = value
                Me.SendPropertyChanged("comment")
                Me.OncommentChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.sysplace")> _
Partial Public Class sysplace
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Integer = CType(Nothing, Integer)

    Private _trans_ID As System.Nullable(Of Integer)

    Private _nameplace As String

    Private _number_addr As String

    Private _room As String

    Private _moo As String

    Private _floor As String

    Private _soi As String

    Private _building As String

    Private _road As String

    Private _thmblcd As System.Nullable(Of Integer)

    Private _amphrcd As System.Nullable(Of Integer)

    Private _chngwtcd As System.Nullable(Of Integer)

    Private _tel_home As String

    Private _tel_telephone As String

    Private _type_process As System.Nullable(Of Integer)

    Private _rcvno As System.Nullable(Of Integer)

    Private _houseno As String

    Private _gln As String

#Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ontrans_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontrans_IDChanged()
    End Sub
    Partial Private Sub OnnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnnameplaceChanged()
    End Sub
    Partial Private Sub Onnumber_addrChanging(value As String)
    End Sub
    Partial Private Sub Onnumber_addrChanged()
    End Sub
    Partial Private Sub OnroomChanging(value As String)
    End Sub
    Partial Private Sub OnroomChanged()
    End Sub
    Partial Private Sub OnmooChanging(value As String)
    End Sub
    Partial Private Sub OnmooChanged()
    End Sub
    Partial Private Sub OnfloorChanging(value As String)
    End Sub
    Partial Private Sub OnfloorChanged()
    End Sub
    Partial Private Sub OnsoiChanging(value As String)
    End Sub
    Partial Private Sub OnsoiChanged()
    End Sub
    Partial Private Sub OnbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnbuildingChanged()
    End Sub
    Partial Private Sub OnroadChanging(value As String)
    End Sub
    Partial Private Sub OnroadChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub Ontel_homeChanging(value As String)
    End Sub
    Partial Private Sub Ontel_homeChanged()
    End Sub
    Partial Private Sub Ontel_telephoneChanging(value As String)
    End Sub
    Partial Private Sub Ontel_telephoneChanged()
    End Sub
    Partial Private Sub Ontype_processChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontype_processChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnhousenoChanging(value As String)
    End Sub
    Partial Private Sub OnhousenoChanged()
    End Sub
    Partial Private Sub OnglnChanging(value As String)
    End Sub
    Partial Private Sub OnglnChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New()
        OnCreated()
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True, UpdateCheck:=UpdateCheck.Never)> _
    Public ReadOnly Property ID() As Integer
        Get
            Return Me._ID
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans_ID", DbType:="Int")> _
    Public Property trans_ID() As System.Nullable(Of Integer)
        Get
            Return Me._trans_ID
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._trans_ID.Equals(Value) = False) Then
                Me.Ontrans_IDChanging(Value)
                Me.SendPropertyChanging()
                Me._trans_ID = Value
                Me.SendPropertyChanged("trans_ID")
                Me.Ontrans_IDChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nameplace", DbType:="VarChar(MAX)")> _
    Public Property nameplace() As String
        Get
            Return Me._nameplace
        End Get
        Set(value As String)
            If (String.Equals(Me._nameplace, Value) = False) Then
                Me.OnnameplaceChanging(Value)
                Me.SendPropertyChanging()
                Me._nameplace = Value
                Me.SendPropertyChanged("nameplace")
                Me.OnnameplaceChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_number_addr", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=False)> _
    Public Property number_addr() As String
        Get
            Return Me._number_addr
        End Get
        Set(value As String)
            If (String.Equals(Me._number_addr, Value) = False) Then
                Me.Onnumber_addrChanging(Value)
                Me.SendPropertyChanging()
                Me._number_addr = Value
                Me.SendPropertyChanged("number_addr")
                Me.Onnumber_addrChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_room", DbType:="VarChar(MAX)")> _
    Public Property room() As String
        Get
            Return Me._room
        End Get
        Set(value As String)
            If (String.Equals(Me._room, Value) = False) Then
                Me.OnroomChanging(Value)
                Me.SendPropertyChanging()
                Me._room = Value
                Me.SendPropertyChanged("room")
                Me.OnroomChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_moo", DbType:="VarChar(MAX)")> _
    Public Property moo() As String
        Get
            Return Me._moo
        End Get
        Set(value As String)
            If (String.Equals(Me._moo, Value) = False) Then
                Me.OnmooChanging(Value)
                Me.SendPropertyChanging()
                Me._moo = Value
                Me.SendPropertyChanged("moo")
                Me.OnmooChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_floor", DbType:="VarChar(MAX)")> _
    Public Property floor() As String
        Get
            Return Me._floor
        End Get
        Set(value As String)
            If (String.Equals(Me._floor, Value) = False) Then
                Me.OnfloorChanging(Value)
                Me.SendPropertyChanging()
                Me._floor = Value
                Me.SendPropertyChanged("floor")
                Me.OnfloorChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soi", DbType:="VarChar(MAX)")> _
    Public Property soi() As String
        Get
            Return Me._soi
        End Get
        Set(value As String)
            If (String.Equals(Me._soi, Value) = False) Then
                Me.OnsoiChanging(Value)
                Me.SendPropertyChanging()
                Me._soi = Value
                Me.SendPropertyChanged("soi")
                Me.OnsoiChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_building", DbType:="VarChar(MAX)")> _
    Public Property building() As String
        Get
            Return Me._building
        End Get
        Set(value As String)
            If (String.Equals(Me._building, Value) = False) Then
                Me.OnbuildingChanging(Value)
                Me.SendPropertyChanging()
                Me._building = Value
                Me.SendPropertyChanged("building")
                Me.OnbuildingChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_road", DbType:="VarChar(MAX)")> _
    Public Property road() As String
        Get
            Return Me._road
        End Get
        Set(value As String)
            If (String.Equals(Me._road, Value) = False) Then
                Me.OnroadChanging(Value)
                Me.SendPropertyChanging()
                Me._road = Value
                Me.SendPropertyChanged("road")
                Me.OnroadChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="Int")> _
    Public Property thmblcd() As System.Nullable(Of Integer)
        Get
            Return Me._thmblcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._thmblcd.Equals(Value) = False) Then
                Me.OnthmblcdChanging(Value)
                Me.SendPropertyChanging()
                Me._thmblcd = Value
                Me.SendPropertyChanged("thmblcd")
                Me.OnthmblcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="Int")> _
    Public Property amphrcd() As System.Nullable(Of Integer)
        Get
            Return Me._amphrcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._amphrcd.Equals(Value) = False) Then
                Me.OnamphrcdChanging(Value)
                Me.SendPropertyChanging()
                Me._amphrcd = Value
                Me.SendPropertyChanged("amphrcd")
                Me.OnamphrcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")> _
    Public Property chngwtcd() As System.Nullable(Of Integer)
        Get
            Return Me._chngwtcd
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._chngwtcd.Equals(Value) = False) Then
                Me.OnchngwtcdChanging(Value)
                Me.SendPropertyChanging()
                Me._chngwtcd = Value
                Me.SendPropertyChanged("chngwtcd")
                Me.OnchngwtcdChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel_home", DbType:="VarChar(MAX)")> _
    Public Property tel_home() As String
        Get
            Return Me._tel_home
        End Get
        Set(value As String)
            If (String.Equals(Me._tel_home, Value) = False) Then
                Me.Ontel_homeChanging(Value)
                Me.SendPropertyChanging()
                Me._tel_home = Value
                Me.SendPropertyChanged("tel_home")
                Me.Ontel_homeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel_telephone", DbType:="VarChar(MAX)")> _
    Public Property tel_telephone() As String
        Get
            Return Me._tel_telephone
        End Get
        Set(value As String)
            If (String.Equals(Me._tel_telephone, Value) = False) Then
                Me.Ontel_telephoneChanging(Value)
                Me.SendPropertyChanging()
                Me._tel_telephone = Value
                Me.SendPropertyChanged("tel_telephone")
                Me.Ontel_telephoneChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type_process", DbType:="Int")> _
    Public Property type_process() As System.Nullable(Of Integer)
        Get
            Return Me._type_process
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._type_process.Equals(Value) = False) Then
                Me.Ontype_processChanging(Value)
                Me.SendPropertyChanging()
                Me._type_process = Value
                Me.SendPropertyChanged("type_process")
                Me.Ontype_processChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")> _
    Public Property rcvno() As System.Nullable(Of Integer)
        Get
            Return Me._rcvno
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._rcvno.Equals(Value) = False) Then
                Me.OnrcvnoChanging(Value)
                Me.SendPropertyChanging()
                Me._rcvno = Value
                Me.SendPropertyChanged("rcvno")
                Me.OnrcvnoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_houseno", DbType:="NVarChar(50)")> _
    Public Property houseno() As String
        Get
            Return Me._houseno
        End Get
        Set(value As String)
            If (String.Equals(Me._houseno, Value) = False) Then
                Me.OnhousenoChanging(Value)
                Me.SendPropertyChanging()
                Me._houseno = Value
                Me.SendPropertyChanged("houseno")
                Me.OnhousenoChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gln", DbType:="NVarChar(50)")> _
    Public Property gln() As String
        Get
            Return Me._gln
        End Get
        Set(value As String)
            If (String.Equals(Me._gln, Value) = False) Then
                Me.OnglnChanging(Value)
                Me.SendPropertyChanging()
                Me._gln = Value
                Me.SendPropertyChanged("gln")
                Me.OnglnChanged()
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class
